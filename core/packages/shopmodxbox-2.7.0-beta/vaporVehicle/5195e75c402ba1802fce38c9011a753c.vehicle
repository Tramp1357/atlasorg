<?php return array (
  'class' => 'vaporVehicle',
  'object' => 
  array (
    'tableName' => 'site_snippets',
    'drop' => 'DROP TABLE IF EXISTS `[[++table_prefix]]site_snippets`',
    'table' => 'CREATE TABLE `[[++table_prefix]]site_snippets` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `source` int(10) unsigned NOT NULL DEFAULT \'0\',
  `property_preprocess` tinyint(1) unsigned NOT NULL DEFAULT \'0\',
  `name` varchar(50) NOT NULL DEFAULT \'\',
  `description` varchar(255) NOT NULL DEFAULT \'\',
  `editor_type` int(11) NOT NULL DEFAULT \'0\',
  `category` int(11) NOT NULL DEFAULT \'0\',
  `cache_type` tinyint(1) NOT NULL DEFAULT \'0\',
  `snippet` mediumtext,
  `locked` tinyint(1) unsigned NOT NULL DEFAULT \'0\',
  `properties` text,
  `moduleguid` varchar(32) NOT NULL DEFAULT \'\',
  `static` tinyint(1) unsigned NOT NULL DEFAULT \'0\',
  `static_file` varchar(255) NOT NULL DEFAULT \'\',
  PRIMARY KEY (`id`),
  UNIQUE KEY `name` (`name`),
  KEY `category` (`category`),
  KEY `locked` (`locked`),
  KEY `moduleguid` (`moduleguid`),
  KEY `static` (`static`)
) ENGINE=MyISAM AUTO_INCREMENT=59 DEFAULT CHARSET=utf8',
    'data' => 
    array (
      0 => 'INSERT INTO `[[++table_prefix]]site_snippets` (`id`, `source`, `property_preprocess`, `name`, `description`, `editor_type`, `category`, `cache_type`, `snippet`, `locked`, `properties`, `moduleguid`, `static`, `static_file`) VALUES (\'1\', \'0\', \'0\', \'getResources\', \'<strong>1.6.0-pl</strong> A general purpose Resource listing and summarization snippet for MODx Revolution\', \'0\', \'0\', \'0\', \'/**\\n * getResources\\n *\\n * A general purpose Resource listing and summarization snippet for MODX 2.x.\\n *\\n * @author Jason Coward\\n * @copyright Copyright 2010-2012, Jason Coward\\n *\\n * TEMPLATES\\n *\\n * tpl - Name of a chunk serving as a resource template\\n * [NOTE: if not provided, properties are dumped to output for each resource]\\n *\\n * tplOdd - (Opt) Name of a chunk serving as resource template for resources with an odd idx value\\n * (see idx property)\\n * tplFirst - (Opt) Name of a chunk serving as resource template for the first resource (see first\\n * property)\\n * tplLast - (Opt) Name of a chunk serving as resource template for the last resource (see last\\n * property)\\n * tpl_{n} - (Opt) Name of a chunk serving as resource template for the nth resource\\n *\\n * tplWrapper - (Opt) Name of a chunk serving as a wrapper template for the output\\n * [NOTE: Does not work with toSeparatePlaceholders]\\n *\\n * SELECTION\\n *\\n * parents - Comma-delimited list of ids serving as parents\\n *\\n * context - (Opt) Comma-delimited list of context keys to limit results by; if empty, contexts for all specified\\n * parents will be used (all contexts if 0 is specified) [default=]\\n *\\n * depth - (Opt) Integer value indicating depth to search for resources from each parent [default=10]\\n *\\n * tvFilters - (Opt) Delimited-list of TemplateVar values to filter resources by. Supports two\\n * delimiters and two value search formats. The first delimiter || represents a logical OR and the\\n * primary grouping mechanism.  Within each group you can provide a comma-delimited list of values.\\n * These values can be either tied to a specific TemplateVar by name, e.g. myTV==value, or just the\\n * value, indicating you are searching for the value in any TemplateVar tied to the Resource. An\\n * example would be &tvFilters=`filter2==one,filter1==bar%||filter1==foo`\\n * [NOTE: filtering by values uses a LIKE query and % is considered a wildcard.]\\n * [NOTE: this only looks at the raw value set for specific Resource, i. e. there must be a value\\n * specifically set for the Resource and it is not evaluated.]\\n *\\n * tvFiltersAndDelimiter - (Opt) Custom delimiter for logical AND, default \\\',\\\', in case you want to\\n * match a literal comma in the tvFilters. E.g. &tvFiltersAndDelimiter=`&&`\\n * &tvFilters=`filter1==foo,bar&&filter2==baz` [default=,]\\n *\\n * tvFiltersOrDelimiter - (Opt) Custom delimiter for logical OR, default \\\'||\\\', in case you want to\\n * match a literal \\\'||\\\' in the tvFilters. E.g. &tvFiltersOrDelimiter=`|OR|`\\n * &tvFilters=`filter1==foo||bar|OR|filter2==baz` [default=||]\\n *\\n * where - (Opt) A JSON expression of criteria to build any additional where clauses from. An example would be\\n * &where=`{{\\"alias:LIKE\\":\\"foo%\\", \\"OR:alias:LIKE\\":\\"%bar\\"},{\\"OR:pagetitle:=\\":\\"foobar\\", \\"AND:description:=\\":\\"raboof\\"}}`\\n *\\n * sortby - (Opt) Field to sort by or a JSON array, e.g. {\\"publishedon\\":\\"ASC\\",\\"createdon\\":\\"DESC\\"} [default=publishedon]\\n * sortbyTV - (opt) A Template Variable name to sort by (if supplied, this precedes the sortby value) [default=]\\n * sortbyTVType - (Opt) A data type to CAST a TV Value to in order to sort on it properly [default=string]\\n * sortbyAlias - (Opt) Query alias for sortby field [default=]\\n * sortbyEscaped - (Opt) Escapes the field name(s) specified in sortby [default=0]\\n * sortdir - (Opt) Order which to sort by [default=DESC]\\n * sortdirTV - (Opt) Order which to sort by a TV [default=DESC]\\n * limit - (Opt) Limits the number of resources returned [default=5]\\n * offset - (Opt) An offset of resources returned by the criteria to skip [default=0]\\n * dbCacheFlag - (Opt) Controls caching of db queries; 0|false = do not cache result set; 1 = cache result set\\n * according to cache settings, any other integer value = number of seconds to cache result set [default=0]\\n *\\n * OPTIONS\\n *\\n * includeContent - (Opt) Indicates if the content of each resource should be returned in the\\n * results [default=0]\\n * includeTVs - (Opt) Indicates if TemplateVar values should be included in the properties available\\n * to each resource template [default=0]\\n * includeTVList - (Opt) Limits the TemplateVars that are included if includeTVs is true to those specified\\n * by name in a comma-delimited list [default=]\\n * prepareTVs - (Opt) Prepares media-source dependent TemplateVar values [default=1]\\n * prepareTVList - (Opt) Limits the TVs that are prepared to those specified by name in a comma-delimited\\n * list [default=]\\n * processTVs - (Opt) Indicates if TemplateVar values should be rendered as they would on the\\n * resource being summarized [default=0]\\n * processTVList - (opt) Limits the TemplateVars that are processed if included to those specified\\n * by name in a comma-delimited list [default=]\\n * tvPrefix - (Opt) The prefix for TemplateVar properties [default=tv.]\\n * idx - (Opt) You can define the starting idx of the resources, which is an property that is\\n * incremented as each resource is rendered [default=1]\\n * first - (Opt) Define the idx which represents the first resource (see tplFirst) [default=1]\\n * last - (Opt) Define the idx which represents the last resource (see tplLast) [default=# of\\n * resources being summarized + first - 1]\\n * outputSeparator - (Opt) An optional string to separate each tpl instance [default=\\"\\\\n\\"]\\n * wrapIfEmpty - (Opt) Indicates if the tplWrapper should be applied if the output is empty [default=0]\\n *\\n */\\n$output = array();\\n$outputSeparator = isset($outputSeparator) ? $outputSeparator : \\"\\\\n\\";\\n\\n/* set default properties */\\n$tpl = !empty($tpl) ? $tpl : \\\'\\\';\\n$includeContent = !empty($includeContent) ? true : false;\\n$includeTVs = !empty($includeTVs) ? true : false;\\n$includeTVList = !empty($includeTVList) ? explode(\\\',\\\', $includeTVList) : array();\\n$processTVs = !empty($processTVs) ? true : false;\\n$processTVList = !empty($processTVList) ? explode(\\\',\\\', $processTVList) : array();\\n$prepareTVs = !empty($prepareTVs) ? true : false;\\n$prepareTVList = !empty($prepareTVList) ? explode(\\\',\\\', $prepareTVList) : array();\\n$tvPrefix = isset($tvPrefix) ? $tvPrefix : \\\'tv.\\\';\\n$parents = (!empty($parents) || $parents === \\\'0\\\') ? explode(\\\',\\\', $parents) : array($modx->resource->get(\\\'id\\\'));\\narray_walk($parents, \\\'trim\\\');\\n$parents = array_unique($parents);\\n$depth = isset($depth) ? (integer) $depth : 10;\\n\\n$tvFiltersOrDelimiter = isset($tvFiltersOrDelimiter) ? $tvFiltersOrDelimiter : \\\'||\\\';\\n$tvFiltersAndDelimiter = isset($tvFiltersAndDelimiter) ? $tvFiltersAndDelimiter : \\\',\\\';\\n$tvFilters = !empty($tvFilters) ? explode($tvFiltersOrDelimiter, $tvFilters) : array();\\n\\n$where = !empty($where) ? $modx->fromJSON($where) : array();\\n$showUnpublished = !empty($showUnpublished) ? true : false;\\n$showDeleted = !empty($showDeleted) ? true : false;\\n\\n$sortby = isset($sortby) ? $sortby : \\\'publishedon\\\';\\n$sortbyTV = isset($sortbyTV) ? $sortbyTV : \\\'\\\';\\n$sortbyAlias = isset($sortbyAlias) ? $sortbyAlias : \\\'modResource\\\';\\n$sortbyEscaped = !empty($sortbyEscaped) ? true : false;\\n$sortdir = isset($sortdir) ? $sortdir : \\\'DESC\\\';\\n$sortdirTV = isset($sortdirTV) ? $sortdirTV : \\\'DESC\\\';\\n$limit = isset($limit) ? (integer) $limit : 5;\\n$offset = isset($offset) ? (integer) $offset : 0;\\n$totalVar = !empty($totalVar) ? $totalVar : \\\'total\\\';\\n\\n$dbCacheFlag = !isset($dbCacheFlag) ? false : $dbCacheFlag;\\nif (is_string($dbCacheFlag) || is_numeric($dbCacheFlag)) {\\n    if ($dbCacheFlag == \\\'0\\\') {\\n        $dbCacheFlag = false;\\n    } elseif ($dbCacheFlag == \\\'1\\\') {\\n        $dbCacheFlag = true;\\n    } else {\\n        $dbCacheFlag = (integer) $dbCacheFlag;\\n    }\\n}\\n\\n/* multiple context support */\\n$contextArray = array();\\n$contextSpecified = false;\\nif (!empty($context)) {\\n    $contextArray = explode(\\\',\\\',$context);\\n    array_walk($contextArray, \\\'trim\\\');\\n    $contexts = array();\\n    foreach ($contextArray as $ctx) {\\n        $contexts[] = $modx->quote($ctx);\\n    }\\n    $context = implode(\\\',\\\',$contexts);\\n    $contextSpecified = true;\\n    unset($contexts,$ctx);\\n} else {\\n    $context = $modx->quote($modx->context->get(\\\'key\\\'));\\n}\\n\\n$pcMap = array();\\n$pcQuery = $modx->newQuery(\\\'modResource\\\', array(\\\'id:IN\\\' => $parents), $dbCacheFlag);\\n$pcQuery->select(array(\\\'id\\\', \\\'context_key\\\'));\\nif ($pcQuery->prepare() && $pcQuery->stmt->execute()) {\\n    foreach ($pcQuery->stmt->fetchAll(PDO::FETCH_ASSOC) as $pcRow) {\\n        $pcMap[(integer) $pcRow[\\\'id\\\']] = $pcRow[\\\'context_key\\\'];\\n    }\\n}\\n\\n$children = array();\\n$parentArray = array();\\nforeach ($parents as $parent) {\\n    $parent = (integer) $parent;\\n    if ($parent === 0) {\\n        $pchildren = array();\\n        if ($contextSpecified) {\\n            foreach ($contextArray as $pCtx) {\\n                if (!in_array($pCtx, $contextArray)) {\\n                    continue;\\n                }\\n                $options = $pCtx !== $modx->context->get(\\\'key\\\') ? array(\\\'context\\\' => $pCtx) : array();\\n                $pcchildren = $modx->getChildIds($parent, $depth, $options);\\n                if (!empty($pcchildren)) $pchildren = array_merge($pchildren, $pcchildren);\\n            }\\n        } else {\\n            $cQuery = $modx->newQuery(\\\'modContext\\\', array(\\\'key:!=\\\' => \\\'mgr\\\'));\\n            $cQuery->select(array(\\\'key\\\'));\\n            if ($cQuery->prepare() && $cQuery->stmt->execute()) {\\n                foreach ($cQuery->stmt->fetchAll(PDO::FETCH_COLUMN) as $pCtx) {\\n                    $options = $pCtx !== $modx->context->get(\\\'key\\\') ? array(\\\'context\\\' => $pCtx) : array();\\n                    $pcchildren = $modx->getChildIds($parent, $depth, $options);\\n                    if (!empty($pcchildren)) $pchildren = array_merge($pchildren, $pcchildren);\\n                }\\n            }\\n        }\\n        $parentArray[] = $parent;\\n    } else {\\n        $pContext = array_key_exists($parent, $pcMap) ? $pcMap[$parent] : false;\\n        if ($debug) $modx->log(modX::LOG_LEVEL_ERROR, \\"context for {$parent} is {$pContext}\\");\\n        if ($pContext && $contextSpecified && !in_array($pContext, $contextArray, true)) {\\n            $parent = next($parents);\\n            continue;\\n        }\\n        $parentArray[] = $parent;\\n        $options = !empty($pContext) && $pContext !== $modx->context->get(\\\'key\\\') ? array(\\\'context\\\' => $pContext) : array();\\n        $pchildren = $modx->getChildIds($parent, $depth, $options);\\n    }\\n    if (!empty($pchildren)) $children = array_merge($children, $pchildren);\\n    $parent = next($parents);\\n}\\n$parents = array_merge($parentArray, $children);\\n\\n/* build query */\\n$criteria = array(\\"modResource.parent IN (\\" . implode(\\\',\\\', $parents) . \\")\\");\\nif ($contextSpecified) {\\n    $contextResourceTbl = $modx->getTableName(\\\'modContextResource\\\');\\n    $criteria[] = \\"(modResource.context_key IN ({$context}) OR EXISTS(SELECT 1 FROM {$contextResourceTbl} ctx WHERE ctx.resource = modResource.id AND ctx.context_key IN ({$context})))\\";\\n}\\nif (empty($showDeleted)) {\\n    $criteria[\\\'deleted\\\'] = \\\'0\\\';\\n}\\nif (empty($showUnpublished)) {\\n    $criteria[\\\'published\\\'] = \\\'1\\\';\\n}\\nif (empty($showHidden)) {\\n    $criteria[\\\'hidemenu\\\'] = \\\'0\\\';\\n}\\nif (!empty($hideContainers)) {\\n    $criteria[\\\'isfolder\\\'] = \\\'0\\\';\\n}\\n$criteria = $modx->newQuery(\\\'modResource\\\', $criteria);\\nif (!empty($tvFilters)) {\\n    $tmplVarTbl = $modx->getTableName(\\\'modTemplateVar\\\');\\n    $tmplVarResourceTbl = $modx->getTableName(\\\'modTemplateVarResource\\\');\\n    $conditions = array();\\n    $operators = array(\\n        \\\'<=>\\\' => \\\'<=>\\\',\\n        \\\'===\\\' => \\\'=\\\',\\n        \\\'!==\\\' => \\\'!=\\\',\\n        \\\'<>\\\' => \\\'<>\\\',\\n        \\\'==\\\' => \\\'LIKE\\\',\\n        \\\'!=\\\' => \\\'NOT LIKE\\\',\\n        \\\'<<\\\' => \\\'<\\\',\\n        \\\'<=\\\' => \\\'<=\\\',\\n        \\\'=<\\\' => \\\'=<\\\',\\n        \\\'>>\\\' => \\\'>\\\',\\n        \\\'>=\\\' => \\\'>=\\\',\\n        \\\'=>\\\' => \\\'=>\\\'\\n    );\\n    foreach ($tvFilters as $fGroup => $tvFilter) {\\n        $filterGroup = array();\\n        $filters = explode($tvFiltersAndDelimiter, $tvFilter);\\n        $multiple = count($filters) > 0;\\n        foreach ($filters as $filter) {\\n            $operator = \\\'==\\\';\\n            $sqlOperator = \\\'LIKE\\\';\\n            foreach ($operators as $op => $opSymbol) {\\n                if (strpos($filter, $op, 1) !== false) {\\n                    $operator = $op;\\n                    $sqlOperator = $opSymbol;\\n                    break;\\n                }\\n            }\\n            $tvValueField = \\\'tvr.value\\\';\\n            $tvDefaultField = \\\'tv.default_text\\\';\\n            $f = explode($operator, $filter);\\n            if (count($f) == 2) {\\n                $tvName = $modx->quote($f[0]);\\n                if (is_numeric($f[1]) && !in_array($sqlOperator, array(\\\'LIKE\\\', \\\'NOT LIKE\\\'))) {\\n                    $tvValue = $f[1];\\n                    if ($f[1] == (integer)$f[1]) {\\n                        $tvValueField = \\"CAST({$tvValueField} AS SIGNED INTEGER)\\";\\n                        $tvDefaultField = \\"CAST({$tvDefaultField} AS SIGNED INTEGER)\\";\\n                    } else {\\n                        $tvValueField = \\"CAST({$tvValueField} AS DECIMAL)\\";\\n                        $tvDefaultField = \\"CAST({$tvDefaultField} AS DECIMAL)\\";\\n                    }\\n                } else {\\n                    $tvValue = $modx->quote($f[1]);\\n                }\\n                if ($multiple) {\\n                    $filterGroup[] =\\n                        \\"(EXISTS (SELECT 1 FROM {$tmplVarResourceTbl} tvr JOIN {$tmplVarTbl} tv ON {$tvValueField} {$sqlOperator} {$tvValue} AND tv.name = {$tvName} AND tv.id = tvr.tmplvarid WHERE tvr.contentid = modResource.id) \\" .\\n                        \\"OR EXISTS (SELECT 1 FROM {$tmplVarTbl} tv WHERE tv.name = {$tvName} AND {$tvDefaultField} {$sqlOperator} {$tvValue} AND tv.id NOT IN (SELECT tmplvarid FROM {$tmplVarResourceTbl} WHERE contentid = modResource.id)) \\" .\\n                        \\")\\";\\n                } else {\\n                    $filterGroup =\\n                        \\"(EXISTS (SELECT 1 FROM {$tmplVarResourceTbl} tvr JOIN {$tmplVarTbl} tv ON {$tvValueField} {$sqlOperator} {$tvValue} AND tv.name = {$tvName} AND tv.id = tvr.tmplvarid WHERE tvr.contentid = modResource.id) \\" .\\n                        \\"OR EXISTS (SELECT 1 FROM {$tmplVarTbl} tv WHERE tv.name = {$tvName} AND {$tvDefaultField} {$sqlOperator} {$tvValue} AND tv.id NOT IN (SELECT tmplvarid FROM {$tmplVarResourceTbl} WHERE contentid = modResource.id)) \\" .\\n                        \\")\\";\\n                }\\n            } elseif (count($f) == 1) {\\n                $tvValue = $modx->quote($f[0]);\\n                if ($multiple) {\\n                    $filterGroup[] = \\"EXISTS (SELECT 1 FROM {$tmplVarResourceTbl} tvr JOIN {$tmplVarTbl} tv ON {$tvValueField} {$sqlOperator} {$tvValue} AND tv.id = tvr.tmplvarid WHERE tvr.contentid = modResource.id)\\";\\n                } else {\\n                    $filterGroup = \\"EXISTS (SELECT 1 FROM {$tmplVarResourceTbl} tvr JOIN {$tmplVarTbl} tv ON {$tvValueField} {$sqlOperator} {$tvValue} AND tv.id = tvr.tmplvarid WHERE tvr.contentid = modResource.id)\\";\\n                }\\n            }\\n        }\\n        $conditions[] = $filterGroup;\\n    }\\n    if (!empty($conditions)) {\\n        $firstGroup = true;\\n        foreach ($conditions as $cGroup => $c) {\\n            if (is_array($c)) {\\n                $first = true;\\n                foreach ($c as $cond) {\\n                    if ($first && !$firstGroup) {\\n                        $criteria->condition($criteria->query[\\\'where\\\'][0][1], $cond, xPDOQuery::SQL_OR, null, $cGroup);\\n                    } else {\\n                        $criteria->condition($criteria->query[\\\'where\\\'][0][1], $cond, xPDOQuery::SQL_AND, null, $cGroup);\\n                    }\\n                    $first = false;\\n                }\\n            } else {\\n                $criteria->condition($criteria->query[\\\'where\\\'][0][1], $c, $firstGroup ? xPDOQuery::SQL_AND : xPDOQuery::SQL_OR, null, $cGroup);\\n            }\\n            $firstGroup = false;\\n        }\\n    }\\n}\\n/* include/exclude resources, via &resources=`123,-456` prop */\\nif (!empty($resources)) {\\n    $resourceConditions = array();\\n    $resources = explode(\\\',\\\',$resources);\\n    $include = array();\\n    $exclude = array();\\n    foreach ($resources as $resource) {\\n        $resource = (int)$resource;\\n        if ($resource == 0) continue;\\n        if ($resource < 0) {\\n            $exclude[] = abs($resource);\\n        } else {\\n            $include[] = $resource;\\n        }\\n    }\\n    if (!empty($include)) {\\n        $criteria->where(array(\\\'OR:modResource.id:IN\\\' => $include), xPDOQuery::SQL_OR);\\n    }\\n    if (!empty($exclude)) {\\n        $criteria->where(array(\\\'modResource.id:NOT IN\\\' => $exclude), xPDOQuery::SQL_AND, null, 1);\\n    }\\n}\\nif (!empty($where)) {\\n    $criteria->where($where);\\n}\\n\\n$total = $modx->getCount(\\\'modResource\\\', $criteria);\\n$modx->setPlaceholder($totalVar, $total);\\n\\n$fields = array_keys($modx->getFields(\\\'modResource\\\'));\\nif (empty($includeContent)) {\\n    $fields = array_diff($fields, array(\\\'content\\\'));\\n}\\n$columns = $includeContent ? $modx->getSelectColumns(\\\'modResource\\\', \\\'modResource\\\') : $modx->getSelectColumns(\\\'modResource\\\', \\\'modResource\\\', \\\'\\\', array(\\\'content\\\'), true);\\n$criteria->select($columns);\\nif (!empty($sortbyTV)) {\\n    $criteria->leftJoin(\\\'modTemplateVar\\\', \\\'tvDefault\\\', array(\\n        \\"tvDefault.name\\" => $sortbyTV\\n    ));\\n    $criteria->leftJoin(\\\'modTemplateVarResource\\\', \\\'tvSort\\\', array(\\n        \\"tvSort.contentid = modResource.id\\",\\n        \\"tvSort.tmplvarid = tvDefault.id\\"\\n    ));\\n    if (empty($sortbyTVType)) $sortbyTVType = \\\'string\\\';\\n    if ($modx->getOption(\\\'dbtype\\\') === \\\'mysql\\\') {\\n        switch ($sortbyTVType) {\\n            case \\\'integer\\\':\\n                $criteria->select(\\"CAST(IFNULL(tvSort.value, tvDefault.default_text) AS SIGNED INTEGER) AS sortTV\\");\\n                break;\\n            case \\\'decimal\\\':\\n                $criteria->select(\\"CAST(IFNULL(tvSort.value, tvDefault.default_text) AS DECIMAL) AS sortTV\\");\\n                break;\\n            case \\\'datetime\\\':\\n                $criteria->select(\\"CAST(IFNULL(tvSort.value, tvDefault.default_text) AS DATETIME) AS sortTV\\");\\n                break;\\n            case \\\'string\\\':\\n            default:\\n                $criteria->select(\\"IFNULL(tvSort.value, tvDefault.default_text) AS sortTV\\");\\n                break;\\n        }\\n    } elseif ($modx->getOption(\\\'dbtype\\\') === \\\'sqlsrv\\\') {\\n        switch ($sortbyTVType) {\\n            case \\\'integer\\\':\\n                $criteria->select(\\"CAST(ISNULL(tvSort.value, tvDefault.default_text) AS BIGINT) AS sortTV\\");\\n                break;\\n            case \\\'decimal\\\':\\n                $criteria->select(\\"CAST(ISNULL(tvSort.value, tvDefault.default_text) AS DECIMAL) AS sortTV\\");\\n                break;\\n            case \\\'datetime\\\':\\n                $criteria->select(\\"CAST(ISNULL(tvSort.value, tvDefault.default_text) AS DATETIME) AS sortTV\\");\\n                break;\\n            case \\\'string\\\':\\n            default:\\n                $criteria->select(\\"ISNULL(tvSort.value, tvDefault.default_text) AS sortTV\\");\\n                break;\\n        }\\n    }\\n    $criteria->sortby(\\"sortTV\\", $sortdirTV);\\n}\\nif (!empty($sortby)) {\\n    if (strpos($sortby, \\\'{\\\') === 0) {\\n        $sorts = $modx->fromJSON($sortby);\\n    } else {\\n        $sorts = array($sortby => $sortdir);\\n    }\\n    if (is_array($sorts)) {\\n        while (list($sort, $dir) = each($sorts)) {\\n            if ($sortbyEscaped) $sort = $modx->escape($sort);\\n            if (!empty($sortbyAlias)) $sort = $modx->escape($sortbyAlias) . \\".{$sort}\\";\\n            $criteria->sortby($sort, $dir);\\n        }\\n    }\\n}\\nif (!empty($limit)) $criteria->limit($limit, $offset);\\n\\nif (!empty($debug)) {\\n    $criteria->prepare();\\n    $modx->log(modX::LOG_LEVEL_ERROR, $criteria->toSQL());\\n}\\n$collection = $modx->getCollection(\\\'modResource\\\', $criteria, $dbCacheFlag);\\n\\n$idx = !empty($idx) && $idx !== \\\'0\\\' ? (integer) $idx : 1;\\n$first = empty($first) && $first !== \\\'0\\\' ? 1 : (integer) $first;\\n$last = empty($last) ? (count($collection) + $idx - 1) : (integer) $last;\\n\\n/* include parseTpl */\\ninclude_once $modx->getOption(\\\'getresources.core_path\\\',null,$modx->getOption(\\\'core_path\\\').\\\'components/getresources/\\\').\\\'include.parsetpl.php\\\';\\n\\n$templateVars = array();\\nif (!empty($includeTVs) && !empty($includeTVList)) {\\n    $templateVars = $modx->getCollection(\\\'modTemplateVar\\\', array(\\\'name:IN\\\' => $includeTVList));\\n}\\n/** @var modResource $resource */\\nforeach ($collection as $resourceId => $resource) {\\n    $tvs = array();\\n    if (!empty($includeTVs)) {\\n        if (empty($includeTVList)) {\\n            $templateVars = $resource->getMany(\\\'TemplateVars\\\');\\n        }\\n        /** @var modTemplateVar $templateVar */\\n        foreach ($templateVars as $tvId => $templateVar) {\\n            if (!empty($includeTVList) && !in_array($templateVar->get(\\\'name\\\'), $includeTVList)) continue;\\n            if ($processTVs && (empty($processTVList) || in_array($templateVar->get(\\\'name\\\'), $processTVList))) {\\n                $tvs[$tvPrefix . $templateVar->get(\\\'name\\\')] = $templateVar->renderOutput($resource->get(\\\'id\\\'));\\n            } else {\\n                $value = $templateVar->getValue($resource->get(\\\'id\\\'));\\n                if ($prepareTVs && method_exists($templateVar, \\\'prepareOutput\\\') && (empty($prepareTVList) || in_array($templateVar->get(\\\'name\\\'), $prepareTVList))) {\\n                    $value = $templateVar->prepareOutput($value);\\n                }\\n                $tvs[$tvPrefix . $templateVar->get(\\\'name\\\')] = $value;\\n            }\\n        }\\n    }\\n    $odd = ($idx & 1);\\n    $properties = array_merge(\\n        $scriptProperties\\n        ,array(\\n            \\\'idx\\\' => $idx\\n            ,\\\'first\\\' => $first\\n            ,\\\'last\\\' => $last\\n            ,\\\'odd\\\' => $odd\\n        )\\n        ,$includeContent ? $resource->toArray() : $resource->get($fields)\\n        ,$tvs\\n    );\\n    $resourceTpl = \\\'\\\';\\n    if ($idx == $first && !empty($tplFirst)) {\\n        $resourceTpl = parseTpl($tplFirst, $properties);\\n    }\\n    if ($idx == $last && empty($resourceTpl) && !empty($tplLast)) {\\n        $resourceTpl = parseTpl($tplLast, $properties);\\n    }\\n    $tplidx = \\\'tpl_\\\' . $idx;\\n    if (empty($resourceTpl) && !empty($$tplidx)) {\\n        $resourceTpl = parseTpl($$tplidx, $properties);\\n    }\\n    if ($idx > 1 && empty($resourceTpl)) {\\n        $divisors = getDivisors($idx);\\n        if (!empty($divisors)) {\\n            foreach ($divisors as $divisor) {\\n                $tplnth = \\\'tpl_n\\\' . $divisor;\\n                if (!empty($$tplnth)) {\\n                    $resourceTpl = parseTpl($$tplnth, $properties);\\n                    if (!empty($resourceTpl)) {\\n                        break;\\n                    }\\n                }\\n            }\\n        }\\n    }\\n    if ($odd && empty($resourceTpl) && !empty($tplOdd)) {\\n        $resourceTpl = parseTpl($tplOdd, $properties);\\n    }\\n    if (!empty($tplCondition) && !empty($conditionalTpls) && empty($resourceTpl)) {\\n        $conTpls = $modx->fromJSON($conditionalTpls);\\n        $subject = $properties[$tplCondition];\\n        $tplOperator = !empty($tplOperator) ? $tplOperator : \\\'=\\\';\\n        $tplOperator = strtolower($tplOperator);\\n        $tplCon = \\\'\\\';\\n        foreach ($conTpls as $operand => $conditionalTpl) {\\n            switch ($tplOperator) {\\n                case \\\'!=\\\':\\n                case \\\'neq\\\':\\n                case \\\'not\\\':\\n                case \\\'isnot\\\':\\n                case \\\'isnt\\\':\\n                case \\\'unequal\\\':\\n                case \\\'notequal\\\':\\n                    $tplCon = (($subject != $operand) ? $conditionalTpl : $tplCon);\\n                    break;\\n                case \\\'<\\\':\\n                case \\\'lt\\\':\\n                case \\\'less\\\':\\n                case \\\'lessthan\\\':\\n                    $tplCon = (($subject < $operand) ? $conditionalTpl : $tplCon);\\n                    break;\\n                case \\\'>\\\':\\n                case \\\'gt\\\':\\n                case \\\'greater\\\':\\n                case \\\'greaterthan\\\':\\n                    $tplCon = (($subject > $operand) ? $conditionalTpl : $tplCon);\\n                    break;\\n                case \\\'<=\\\':\\n                case \\\'lte\\\':\\n                case \\\'lessthanequals\\\':\\n                case \\\'lessthanorequalto\\\':\\n                    $tplCon = (($subject <= $operand) ? $conditionalTpl : $tplCon);\\n                    break;\\n                case \\\'>=\\\':\\n                case \\\'gte\\\':\\n                case \\\'greaterthanequals\\\':\\n                case \\\'greaterthanequalto\\\':\\n                    $tplCon = (($subject >= $operand) ? $conditionalTpl : $tplCon);\\n                    break;\\n                case \\\'isempty\\\':\\n                case \\\'empty\\\':\\n                    $tplCon = empty($subject) ? $conditionalTpl : $tplCon;\\n                    break;\\n                case \\\'!empty\\\':\\n                case \\\'notempty\\\':\\n                case \\\'isnotempty\\\':\\n                    $tplCon = !empty($subject) && $subject != \\\'\\\' ? $conditionalTpl : $tplCon;\\n                    break;\\n                case \\\'isnull\\\':\\n                case \\\'null\\\':\\n                    $tplCon = $subject == null || strtolower($subject) == \\\'null\\\' ? $conditionalTpl : $tplCon;\\n                    break;\\n                case \\\'inarray\\\':\\n                case \\\'in_array\\\':\\n                case \\\'ia\\\':\\n                    $operand = explode(\\\',\\\', $operand);\\n                    $tplCon = in_array($subject, $operand) ? $conditionalTpl : $tplCon;\\n                    break;\\n                case \\\'between\\\':\\n                case \\\'range\\\':\\n                case \\\'>=<\\\':\\n                case \\\'><\\\':\\n                    $operand = explode(\\\',\\\', $operand);\\n                    $tplCon = ($subject >= min($operand) && $subject <= max($operand)) ? $conditionalTpl : $tplCon;\\n                    break;\\n                case \\\'==\\\':\\n                case \\\'=\\\':\\n                case \\\'eq\\\':\\n                case \\\'is\\\':\\n                case \\\'equal\\\':\\n                case \\\'equals\\\':\\n                case \\\'equalto\\\':\\n                default:\\n                    $tplCon = (($subject == $operand) ? $conditionalTpl : $tplCon);\\n                    break;\\n            }\\n        }\\n        if (!empty($tplCon)) {\\n            $resourceTpl = parseTpl($tplCon, $properties);\\n        }\\n    }\\n    if (!empty($tpl) && empty($resourceTpl)) {\\n        $resourceTpl = parseTpl($tpl, $properties);\\n    }\\n    if (empty($resourceTpl)) {\\n        $chunk = $modx->newObject(\\\'modChunk\\\');\\n        $chunk->setCacheable(false);\\n        $output[]= $chunk->process(array(), \\\'<pre>\\\' . print_r($properties, true) .\\\'</pre>\\\');\\n    } else {\\n        $output[]= $resourceTpl;\\n    }\\n    $idx++;\\n}\\n\\n/* output */\\n$toSeparatePlaceholders = $modx->getOption(\\\'toSeparatePlaceholders\\\',$scriptProperties,false);\\nif (!empty($toSeparatePlaceholders)) {\\n    $modx->setPlaceholders($output,$toSeparatePlaceholders);\\n    return \\\'\\\';\\n}\\n\\n$output = implode($outputSeparator, $output);\\n\\n$tplWrapper = $modx->getOption(\\\'tplWrapper\\\', $scriptProperties, false);\\n$wrapIfEmpty = $modx->getOption(\\\'wrapIfEmpty\\\', $scriptProperties, false);\\nif (!empty($tplWrapper) && ($wrapIfEmpty || !empty($output))) {\\n    $output = parseTpl($tplWrapper, array(\\\'output\\\' => $output));\\n}\\n\\n$toPlaceholder = $modx->getOption(\\\'toPlaceholder\\\',$scriptProperties,false);\\nif (!empty($toPlaceholder)) {\\n    $modx->setPlaceholder($toPlaceholder,$output);\\n    return \\\'\\\';\\n}\\nreturn $output;\', \'0\', \'a:44:{s:3:\\"tpl\\";a:7:{s:4:\\"name\\";s:3:\\"tpl\\";s:4:\\"desc\\";s:121:\\"Name of a chunk serving as a resource template. NOTE: if not provided, properties are dumped to output for each resource.\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:6:\\"tplOdd\\";a:7:{s:4:\\"name\\";s:6:\\"tplOdd\\";s:4:\\"desc\\";s:100:\\"Name of a chunk serving as resource template for resources with an odd idx value (see idx property).\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:8:\\"tplFirst\\";a:7:{s:4:\\"name\\";s:8:\\"tplFirst\\";s:4:\\"desc\\";s:89:\\"Name of a chunk serving as resource template for the first resource (see first property).\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:7:\\"tplLast\\";a:7:{s:4:\\"name\\";s:7:\\"tplLast\\";s:4:\\"desc\\";s:87:\\"Name of a chunk serving as resource template for the last resource (see last property).\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:10:\\"tplWrapper\\";a:7:{s:4:\\"name\\";s:10:\\"tplWrapper\\";s:4:\\"desc\\";s:115:\\"Name of a chunk serving as wrapper template for the Snippet output. This does not work with toSeparatePlaceholders.\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:11:\\"wrapIfEmpty\\";a:7:{s:4:\\"name\\";s:11:\\"wrapIfEmpty\\";s:4:\\"desc\\";s:95:\\"Indicates if empty output should be wrapped by the tplWrapper, if specified. Defaults to false.\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:0;s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:6:\\"sortby\\";a:7:{s:4:\\"name\\";s:6:\\"sortby\\";s:4:\\"desc\\";s:153:\\"A field name to sort by or JSON object of field names and sortdir for each field, e.g. {\\"publishedon\\":\\"ASC\\",\\"createdon\\":\\"DESC\\"}. Defaults to publishedon.\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:11:\\"publishedon\\";s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:8:\\"sortbyTV\\";a:7:{s:4:\\"name\\";s:8:\\"sortbyTV\\";s:4:\\"desc\\";s:65:\\"Name of a Template Variable to sort by. Defaults to empty string.\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:12:\\"sortbyTVType\\";a:7:{s:4:\\"name\\";s:12:\\"sortbyTVType\\";s:4:\\"desc\\";s:72:\\"An optional type to indicate how to sort on the Template Variable value.\\";s:4:\\"type\\";s:4:\\"list\\";s:7:\\"options\\";a:4:{i:0;a:2:{s:4:\\"text\\";s:6:\\"string\\";s:5:\\"value\\";s:6:\\"string\\";}i:1;a:2:{s:4:\\"text\\";s:7:\\"integer\\";s:5:\\"value\\";s:7:\\"integer\\";}i:2;a:2:{s:4:\\"text\\";s:7:\\"decimal\\";s:5:\\"value\\";s:7:\\"decimal\\";}i:3;a:2:{s:4:\\"text\\";s:8:\\"datetime\\";s:5:\\"value\\";s:8:\\"datetime\\";}}s:5:\\"value\\";s:6:\\"string\\";s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:11:\\"sortbyAlias\\";a:7:{s:4:\\"name\\";s:11:\\"sortbyAlias\\";s:4:\\"desc\\";s:58:\\"Query alias for sortby field. Defaults to an empty string.\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:13:\\"sortbyEscaped\\";a:7:{s:4:\\"name\\";s:13:\\"sortbyEscaped\\";s:4:\\"desc\\";s:82:\\"Determines if the field name specified in sortby should be escaped. Defaults to 0.\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:1:\\"0\\";s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:7:\\"sortdir\\";a:7:{s:4:\\"name\\";s:7:\\"sortdir\\";s:4:\\"desc\\";s:41:\\"Order which to sort by. Defaults to DESC.\\";s:4:\\"type\\";s:4:\\"list\\";s:7:\\"options\\";a:2:{i:0;a:2:{s:4:\\"text\\";s:3:\\"ASC\\";s:5:\\"value\\";s:3:\\"ASC\\";}i:1;a:2:{s:4:\\"text\\";s:4:\\"DESC\\";s:5:\\"value\\";s:4:\\"DESC\\";}}s:5:\\"value\\";s:4:\\"DESC\\";s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:9:\\"sortdirTV\\";a:7:{s:4:\\"name\\";s:9:\\"sortdirTV\\";s:4:\\"desc\\";s:61:\\"Order which to sort a Template Variable by. Defaults to DESC.\\";s:4:\\"type\\";s:4:\\"list\\";s:7:\\"options\\";a:2:{i:0;a:2:{s:4:\\"text\\";s:3:\\"ASC\\";s:5:\\"value\\";s:3:\\"ASC\\";}i:1;a:2:{s:4:\\"text\\";s:4:\\"DESC\\";s:5:\\"value\\";s:4:\\"DESC\\";}}s:5:\\"value\\";s:4:\\"DESC\\";s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:5:\\"limit\\";a:7:{s:4:\\"name\\";s:5:\\"limit\\";s:4:\\"desc\\";s:55:\\"Limits the number of resources returned. Defaults to 5.\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:1:\\"5\\";s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:6:\\"offset\\";a:7:{s:4:\\"name\\";s:6:\\"offset\\";s:4:\\"desc\\";s:56:\\"An offset of resources returned by the criteria to skip.\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:1:\\"0\\";s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:9:\\"tvFilters\\";a:7:{s:4:\\"name\\";s:9:\\"tvFilters\\";s:4:\\"desc\\";s:778:\\"Delimited-list of TemplateVar values to filter resources by. Supports two delimiters and two value search formats. THe first delimiter || represents a logical OR and the primary grouping mechanism.  Within each group you can provide a comma-delimited list of values. These values can be either tied to a specific TemplateVar by name, e.g. myTV==value, or just the value, indicating you are searching for the value in any TemplateVar tied to the Resource. An example would be &tvFilters=`filter2==one,filter1==bar%||filter1==foo`. <br />NOTE: filtering by values uses a LIKE query and % is considered a wildcard. <br />ANOTHER NOTE: This only looks at the raw value set for specific Resource, i. e. there must be a value specifically set for the Resource and it is not evaluated.\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:21:\\"tvFiltersAndDelimiter\\";a:7:{s:4:\\"name\\";s:21:\\"tvFiltersAndDelimiter\\";s:4:\\"desc\\";s:83:\\"The delimiter to use to separate logical AND expressions in tvFilters. Default is ,\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:1:\\",\\";s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:20:\\"tvFiltersOrDelimiter\\";a:7:{s:4:\\"name\\";s:20:\\"tvFiltersOrDelimiter\\";s:4:\\"desc\\";s:83:\\"The delimiter to use to separate logical OR expressions in tvFilters. Default is ||\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:2:\\"||\\";s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:5:\\"depth\\";a:7:{s:4:\\"name\\";s:5:\\"depth\\";s:4:\\"desc\\";s:88:\\"Integer value indicating depth to search for resources from each parent. Defaults to 10.\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:2:\\"10\\";s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:7:\\"parents\\";a:7:{s:4:\\"name\\";s:7:\\"parents\\";s:4:\\"desc\\";s:57:\\"Optional. Comma-delimited list of ids serving as parents.\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:14:\\"includeContent\\";a:7:{s:4:\\"name\\";s:14:\\"includeContent\\";s:4:\\"desc\\";s:95:\\"Indicates if the content of each resource should be returned in the results. Defaults to false.\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:0;s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:10:\\"includeTVs\\";a:7:{s:4:\\"name\\";s:10:\\"includeTVs\\";s:4:\\"desc\\";s:124:\\"Indicates if TemplateVar values should be included in the properties available to each resource template. Defaults to false.\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:0;s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:13:\\"includeTVList\\";a:7:{s:4:\\"name\\";s:13:\\"includeTVList\\";s:4:\\"desc\\";s:96:\\"Limits included TVs to those specified as a comma-delimited list of TV names. Defaults to empty.\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:10:\\"showHidden\\";a:7:{s:4:\\"name\\";s:10:\\"showHidden\\";s:4:\\"desc\\";s:85:\\"Indicates if Resources that are hidden from menus should be shown. Defaults to false.\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:0;s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:15:\\"showUnpublished\\";a:7:{s:4:\\"name\\";s:15:\\"showUnpublished\\";s:4:\\"desc\\";s:79:\\"Indicates if Resources that are unpublished should be shown. Defaults to false.\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:0;s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:11:\\"showDeleted\\";a:7:{s:4:\\"name\\";s:11:\\"showDeleted\\";s:4:\\"desc\\";s:75:\\"Indicates if Resources that are deleted should be shown. Defaults to false.\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:0;s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:9:\\"resources\\";a:7:{s:4:\\"name\\";s:9:\\"resources\\";s:4:\\"desc\\";s:177:\\"A comma-separated list of resource IDs to exclude or include. IDs with a - in front mean to exclude. Ex: 123,-456 means to include Resource 123, but always exclude Resource 456.\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:10:\\"processTVs\\";a:7:{s:4:\\"name\\";s:10:\\"processTVs\\";s:4:\\"desc\\";s:117:\\"Indicates if TemplateVar values should be rendered as they would on the resource being summarized. Defaults to false.\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:0;s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:13:\\"processTVList\\";a:7:{s:4:\\"name\\";s:13:\\"processTVList\\";s:4:\\"desc\\";s:166:\\"Limits processed TVs to those specified as a comma-delimited list of TV names; note only includedTVs will be available for processing if specified. Defaults to empty.\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:10:\\"prepareTVs\\";a:7:{s:4:\\"name\\";s:10:\\"prepareTVs\\";s:4:\\"desc\\";s:120:\\"Indicates if TemplateVar values that are not processed fully should be prepared before being returned. Defaults to true.\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:13:\\"prepareTVList\\";a:7:{s:4:\\"name\\";s:13:\\"prepareTVList\\";s:4:\\"desc\\";s:164:\\"Limits prepared TVs to those specified as a comma-delimited list of TV names; note only includedTVs will be available for preparing if specified. Defaults to empty.\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:8:\\"tvPrefix\\";a:7:{s:4:\\"name\\";s:8:\\"tvPrefix\\";s:4:\\"desc\\";s:55:\\"The prefix for TemplateVar properties. Defaults to: tv.\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:3:\\"tv.\\";s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:3:\\"idx\\";a:7:{s:4:\\"name\\";s:3:\\"idx\\";s:4:\\"desc\\";s:120:\\"You can define the starting idx of the resources, which is an property that is incremented as each resource is rendered.\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:5:\\"first\\";a:7:{s:4:\\"name\\";s:5:\\"first\\";s:4:\\"desc\\";s:81:\\"Define the idx which represents the first resource (see tplFirst). Defaults to 1.\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:4:\\"last\\";a:7:{s:4:\\"name\\";s:4:\\"last\\";s:4:\\"desc\\";s:129:\\"Define the idx which represents the last resource (see tplLast). Defaults to the number of resources being summarized + first - 1\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:13:\\"toPlaceholder\\";a:7:{s:4:\\"name\\";s:13:\\"toPlaceholder\\";s:4:\\"desc\\";s:85:\\"If set, will assign the result to this placeholder instead of outputting it directly.\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:22:\\"toSeparatePlaceholders\\";a:7:{s:4:\\"name\\";s:22:\\"toSeparatePlaceholders\\";s:4:\\"desc\\";s:130:\\"If set, will assign EACH result to a separate placeholder named by this param suffixed with a sequential number (starting from 0).\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:5:\\"debug\\";a:7:{s:4:\\"name\\";s:5:\\"debug\\";s:4:\\"desc\\";s:68:\\"If true, will send the SQL query to the MODX log. Defaults to false.\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:0;s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:5:\\"where\\";a:7:{s:4:\\"name\\";s:5:\\"where\\";s:4:\\"desc\\";s:193:\\"A JSON expression of criteria to build any additional where clauses from, e.g. &where=`{{\\"alias:LIKE\\":\\"foo%\\", \\"OR:alias:LIKE\\":\\"%bar\\"},{\\"OR:pagetitle:=\\":\\"foobar\\", \\"AND:description:=\\":\\"raboof\\"}}`\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:11:\\"dbCacheFlag\\";a:7:{s:4:\\"name\\";s:11:\\"dbCacheFlag\\";s:4:\\"desc\\";s:218:\\"Determines how result sets are cached if cache_db is enabled in MODX. 0|false = do not cache result set; 1 = cache result set according to cache settings, any other integer value = number of seconds to cache result set\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:1:\\"0\\";s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:7:\\"context\\";a:7:{s:4:\\"name\\";s:7:\\"context\\";s:4:\\"desc\\";s:116:\\"A comma-delimited list of context keys for limiting results. Default is empty, i.e. do not limit results by context.\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:12:\\"tplCondition\\";a:7:{s:4:\\"name\\";s:12:\\"tplCondition\\";s:4:\\"desc\\";s:129:\\"A condition to compare against the conditionalTpls property to map Resources to different tpls based on custom conditional logic.\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:11:\\"tplOperator\\";a:7:{s:4:\\"name\\";s:11:\\"tplOperator\\";s:4:\\"desc\\";s:125:\\"An optional operator to use for the tplCondition when comparing against the conditionalTpls operands. Default is == (equals).\\";s:4:\\"type\\";s:4:\\"list\\";s:7:\\"options\\";a:10:{i:0;a:2:{s:4:\\"text\\";s:11:\\"is equal to\\";s:5:\\"value\\";s:2:\\"==\\";}i:1;a:2:{s:4:\\"text\\";s:15:\\"is not equal to\\";s:5:\\"value\\";s:2:\\"!=\\";}i:2;a:2:{s:4:\\"text\\";s:9:\\"less than\\";s:5:\\"value\\";s:1:\\"<\\";}i:3;a:2:{s:4:\\"text\\";s:21:\\"less than or equal to\\";s:5:\\"value\\";s:2:\\"<=\\";}i:4;a:2:{s:4:\\"text\\";s:24:\\"greater than or equal to\\";s:5:\\"value\\";s:2:\\">=\\";}i:5;a:2:{s:4:\\"text\\";s:8:\\"is empty\\";s:5:\\"value\\";s:5:\\"empty\\";}i:6;a:2:{s:4:\\"text\\";s:12:\\"is not empty\\";s:5:\\"value\\";s:6:\\"!empty\\";}i:7;a:2:{s:4:\\"text\\";s:7:\\"is null\\";s:5:\\"value\\";s:4:\\"null\\";}i:8;a:2:{s:4:\\"text\\";s:11:\\"is in array\\";s:5:\\"value\\";s:7:\\"inarray\\";}i:9;a:2:{s:4:\\"text\\";s:10:\\"is between\\";s:5:\\"value\\";s:7:\\"between\\";}}s:5:\\"value\\";s:2:\\"==\\";s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:15:\\"conditionalTpls\\";a:7:{s:4:\\"name\\";s:15:\\"conditionalTpls\\";s:4:\\"desc\\";s:121:\\"A JSON map of conditional operands and tpls to compare against the tplCondition property using the specified tplOperator.\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}}\', \'\', \'0\', \'\')',
      1 => 'INSERT INTO `[[++table_prefix]]site_snippets` (`id`, `source`, `property_preprocess`, `name`, `description`, `editor_type`, `category`, `cache_type`, `snippet`, `locked`, `properties`, `moduleguid`, `static`, `static_file`) VALUES (\'2\', \'0\', \'0\', \'Wayfinder\', \'Wayfinder for MODx Revolution 2.0.0-beta-5 and later.\', \'0\', \'0\', \'0\', \'/**\\n * Wayfinder Snippet to build site navigation menus\\n *\\n * Totally refactored from original DropMenu nav builder to make it easier to\\n * create custom navigation by using chunks as output templates. By using\\n * templates, many of the paramaters are no longer needed for flexible output\\n * including tables, unordered- or ordered-lists (ULs or OLs), definition lists\\n * (DLs) or in any other format you desire.\\n *\\n * @version 2.1.1-beta5\\n * @author Garry Nutting (collabpad.com)\\n * @author Kyle Jaebker (muddydogpaws.com)\\n * @author Ryan Thrash (modx.com)\\n * @author Shaun McCormick (modx.com)\\n * @author Jason Coward (modx.com)\\n *\\n * @example [[Wayfinder? &startId=`0`]]\\n *\\n * @var modX $modx\\n * @var array $scriptProperties\\n * \\n * @package wayfinder\\n */\\n$wayfinder_base = $modx->getOption(\\\'wayfinder.core_path\\\',$scriptProperties,$modx->getOption(\\\'core_path\\\').\\\'components/wayfinder/\\\');\\n\\n/* include a custom config file if specified */\\nif (isset($scriptProperties[\\\'config\\\'])) {\\n    $scriptProperties[\\\'config\\\'] = str_replace(\\\'../\\\',\\\'\\\',$scriptProperties[\\\'config\\\']);\\n    $scriptProperties[\\\'config\\\'] = $wayfinder_base.\\\'configs/\\\'.$scriptProperties[\\\'config\\\'].\\\'.config.php\\\';\\n} else {\\n    $scriptProperties[\\\'config\\\'] = $wayfinder_base.\\\'configs/default.config.php\\\';\\n}\\nif (file_exists($scriptProperties[\\\'config\\\'])) {\\n    include $scriptProperties[\\\'config\\\'];\\n}\\n\\n/* include wayfinder class */\\ninclude_once $wayfinder_base.\\\'wayfinder.class.php\\\';\\nif (!$modx->loadClass(\\\'Wayfinder\\\',$wayfinder_base,true,true)) {\\n    return \\\'error: Wayfinder class not found\\\';\\n}\\n$wf = new Wayfinder($modx,$scriptProperties);\\n\\n/* get user class definitions\\n * TODO: eventually move these into config parameters */\\n$wf->_css = array(\\n    \\\'first\\\' => isset($firstClass) ? $firstClass : \\\'\\\',\\n    \\\'last\\\' => isset($lastClass) ? $lastClass : \\\'last\\\',\\n    \\\'here\\\' => isset($hereClass) ? $hereClass : \\\'active\\\',\\n    \\\'parent\\\' => isset($parentClass) ? $parentClass : \\\'\\\',\\n    \\\'row\\\' => isset($rowClass) ? $rowClass : \\\'\\\',\\n    \\\'outer\\\' => isset($outerClass) ? $outerClass : \\\'\\\',\\n    \\\'inner\\\' => isset($innerClass) ? $innerClass : \\\'\\\',\\n    \\\'level\\\' => isset($levelClass) ? $levelClass: \\\'\\\',\\n    \\\'self\\\' => isset($selfClass) ? $selfClass : \\\'\\\',\\n    \\\'weblink\\\' => isset($webLinkClass) ? $webLinkClass : \\\'\\\'\\n);\\n\\n/* get user templates\\n * TODO: eventually move these into config parameters */\\n$wf->_templates = array(\\n    \\\'outerTpl\\\' => isset($outerTpl) ? $outerTpl : \\\'\\\',\\n    \\\'rowTpl\\\' => isset($rowTpl) ? $rowTpl : \\\'\\\',\\n    \\\'parentRowTpl\\\' => isset($parentRowTpl) ? $parentRowTpl : \\\'\\\',\\n    \\\'parentRowHereTpl\\\' => isset($parentRowHereTpl) ? $parentRowHereTpl : \\\'\\\',\\n    \\\'hereTpl\\\' => isset($hereTpl) ? $hereTpl : \\\'\\\',\\n    \\\'innerTpl\\\' => isset($innerTpl) ? $innerTpl : \\\'\\\',\\n    \\\'innerRowTpl\\\' => isset($innerRowTpl) ? $innerRowTpl : \\\'\\\',\\n    \\\'innerHereTpl\\\' => isset($innerHereTpl) ? $innerHereTpl : \\\'\\\',\\n    \\\'activeParentRowTpl\\\' => isset($activeParentRowTpl) ? $activeParentRowTpl : \\\'\\\',\\n    \\\'categoryFoldersTpl\\\' => isset($categoryFoldersTpl) ? $categoryFoldersTpl : \\\'\\\',\\n    \\\'startItemTpl\\\' => isset($startItemTpl) ? $startItemTpl : \\\'\\\'\\n);\\n\\n/* process Wayfinder */\\n$output = $wf->run();\\nif ($wf->_config[\\\'debug\\\']) {\\n    $output .= $wf->renderDebugOutput();\\n}\\n\\n/* output results */\\nif ($wf->_config[\\\'ph\\\']) {\\n    $modx->setPlaceholder($wf->_config[\\\'ph\\\'],$output);\\n} else {\\n    return $output;\\n}\', \'0\', \'a:48:{s:5:\\"level\\";a:6:{s:4:\\"name\\";s:5:\\"level\\";s:4:\\"desc\\";s:25:\\"prop_wayfinder.level_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:1:\\"0\\";s:7:\\"lexicon\\";s:20:\\"wayfinder:properties\\";}s:11:\\"includeDocs\\";a:6:{s:4:\\"name\\";s:11:\\"includeDocs\\";s:4:\\"desc\\";s:31:\\"prop_wayfinder.includeDocs_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:1:\\"0\\";s:7:\\"lexicon\\";s:20:\\"wayfinder:properties\\";}s:11:\\"excludeDocs\\";a:6:{s:4:\\"name\\";s:11:\\"excludeDocs\\";s:4:\\"desc\\";s:31:\\"prop_wayfinder.excludeDocs_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:1:\\"0\\";s:7:\\"lexicon\\";s:20:\\"wayfinder:properties\\";}s:8:\\"contexts\\";a:6:{s:4:\\"name\\";s:8:\\"contexts\\";s:4:\\"desc\\";s:28:\\"prop_wayfinder.contexts_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"wayfinder:properties\\";}s:12:\\"cacheResults\\";a:6:{s:4:\\"name\\";s:12:\\"cacheResults\\";s:4:\\"desc\\";s:32:\\"prop_wayfinder.cacheResults_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:20:\\"wayfinder:properties\\";}s:9:\\"cacheTime\\";a:6:{s:4:\\"name\\";s:9:\\"cacheTime\\";s:4:\\"desc\\";s:29:\\"prop_wayfinder.cacheTime_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";i:3600;s:7:\\"lexicon\\";s:20:\\"wayfinder:properties\\";}s:2:\\"ph\\";a:6:{s:4:\\"name\\";s:2:\\"ph\\";s:4:\\"desc\\";s:22:\\"prop_wayfinder.ph_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:20:\\"wayfinder:properties\\";}s:5:\\"debug\\";a:6:{s:4:\\"name\\";s:5:\\"debug\\";s:4:\\"desc\\";s:25:\\"prop_wayfinder.debug_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:20:\\"wayfinder:properties\\";}s:12:\\"ignoreHidden\\";a:6:{s:4:\\"name\\";s:12:\\"ignoreHidden\\";s:4:\\"desc\\";s:32:\\"prop_wayfinder.ignoreHidden_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:20:\\"wayfinder:properties\\";}s:12:\\"hideSubMenus\\";a:6:{s:4:\\"name\\";s:12:\\"hideSubMenus\\";s:4:\\"desc\\";s:32:\\"prop_wayfinder.hideSubMenus_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:20:\\"wayfinder:properties\\";}s:13:\\"useWeblinkUrl\\";a:6:{s:4:\\"name\\";s:13:\\"useWeblinkUrl\\";s:4:\\"desc\\";s:33:\\"prop_wayfinder.useWeblinkUrl_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:20:\\"wayfinder:properties\\";}s:8:\\"fullLink\\";a:6:{s:4:\\"name\\";s:8:\\"fullLink\\";s:4:\\"desc\\";s:28:\\"prop_wayfinder.fullLink_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:20:\\"wayfinder:properties\\";}s:6:\\"scheme\\";a:6:{s:4:\\"name\\";s:6:\\"scheme\\";s:4:\\"desc\\";s:26:\\"prop_wayfinder.scheme_desc\\";s:4:\\"type\\";s:4:\\"list\\";s:7:\\"options\\";a:3:{i:0;a:2:{s:4:\\"text\\";s:23:\\"prop_wayfinder.relative\\";s:5:\\"value\\";s:0:\\"\\";}i:1;a:2:{s:4:\\"text\\";s:23:\\"prop_wayfinder.absolute\\";s:5:\\"value\\";s:3:\\"abs\\";}i:2;a:2:{s:4:\\"text\\";s:19:\\"prop_wayfinder.full\\";s:5:\\"value\\";s:4:\\"full\\";}}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"wayfinder:properties\\";}s:9:\\"sortOrder\\";a:6:{s:4:\\"name\\";s:9:\\"sortOrder\\";s:4:\\"desc\\";s:29:\\"prop_wayfinder.sortOrder_desc\\";s:4:\\"type\\";s:4:\\"list\\";s:7:\\"options\\";a:2:{i:0;a:2:{s:4:\\"text\\";s:24:\\"prop_wayfinder.ascending\\";s:5:\\"value\\";s:3:\\"ASC\\";}i:1;a:2:{s:4:\\"text\\";s:25:\\"prop_wayfinder.descending\\";s:5:\\"value\\";s:4:\\"DESC\\";}}s:5:\\"value\\";s:3:\\"ASC\\";s:7:\\"lexicon\\";s:20:\\"wayfinder:properties\\";}s:6:\\"sortBy\\";a:6:{s:4:\\"name\\";s:6:\\"sortBy\\";s:4:\\"desc\\";s:26:\\"prop_wayfinder.sortBy_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:9:\\"menuindex\\";s:7:\\"lexicon\\";s:20:\\"wayfinder:properties\\";}s:5:\\"limit\\";a:6:{s:4:\\"name\\";s:5:\\"limit\\";s:4:\\"desc\\";s:25:\\"prop_wayfinder.limit_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:1:\\"0\\";s:7:\\"lexicon\\";s:20:\\"wayfinder:properties\\";}s:6:\\"cssTpl\\";a:6:{s:4:\\"name\\";s:6:\\"cssTpl\\";s:4:\\"desc\\";s:26:\\"prop_wayfinder.cssTpl_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:20:\\"wayfinder:properties\\";}s:5:\\"jsTpl\\";a:6:{s:4:\\"name\\";s:5:\\"jsTpl\\";s:4:\\"desc\\";s:25:\\"prop_wayfinder.jsTpl_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:20:\\"wayfinder:properties\\";}s:11:\\"rowIdPrefix\\";a:6:{s:4:\\"name\\";s:11:\\"rowIdPrefix\\";s:4:\\"desc\\";s:31:\\"prop_wayfinder.rowIdPrefix_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:20:\\"wayfinder:properties\\";}s:11:\\"textOfLinks\\";a:6:{s:4:\\"name\\";s:11:\\"textOfLinks\\";s:4:\\"desc\\";s:31:\\"prop_wayfinder.textOfLinks_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:9:\\"menutitle\\";s:7:\\"lexicon\\";s:20:\\"wayfinder:properties\\";}s:12:\\"titleOfLinks\\";a:6:{s:4:\\"name\\";s:12:\\"titleOfLinks\\";s:4:\\"desc\\";s:32:\\"prop_wayfinder.titleOfLinks_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:9:\\"pagetitle\\";s:7:\\"lexicon\\";s:20:\\"wayfinder:properties\\";}s:12:\\"displayStart\\";a:6:{s:4:\\"name\\";s:12:\\"displayStart\\";s:4:\\"desc\\";s:32:\\"prop_wayfinder.displayStart_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:20:\\"wayfinder:properties\\";}s:10:\\"firstClass\\";a:6:{s:4:\\"name\\";s:10:\\"firstClass\\";s:4:\\"desc\\";s:30:\\"prop_wayfinder.firstClass_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:5:\\"first\\";s:7:\\"lexicon\\";s:20:\\"wayfinder:properties\\";}s:9:\\"lastClass\\";a:6:{s:4:\\"name\\";s:9:\\"lastClass\\";s:4:\\"desc\\";s:29:\\"prop_wayfinder.lastClass_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:4:\\"last\\";s:7:\\"lexicon\\";s:20:\\"wayfinder:properties\\";}s:9:\\"hereClass\\";a:6:{s:4:\\"name\\";s:9:\\"hereClass\\";s:4:\\"desc\\";s:29:\\"prop_wayfinder.hereClass_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:6:\\"active\\";s:7:\\"lexicon\\";s:20:\\"wayfinder:properties\\";}s:11:\\"parentClass\\";a:6:{s:4:\\"name\\";s:11:\\"parentClass\\";s:4:\\"desc\\";s:31:\\"prop_wayfinder.parentClass_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"wayfinder:properties\\";}s:8:\\"rowClass\\";a:6:{s:4:\\"name\\";s:8:\\"rowClass\\";s:4:\\"desc\\";s:28:\\"prop_wayfinder.rowClass_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"wayfinder:properties\\";}s:10:\\"outerClass\\";a:6:{s:4:\\"name\\";s:10:\\"outerClass\\";s:4:\\"desc\\";s:30:\\"prop_wayfinder.outerClass_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"wayfinder:properties\\";}s:10:\\"innerClass\\";a:6:{s:4:\\"name\\";s:10:\\"innerClass\\";s:4:\\"desc\\";s:30:\\"prop_wayfinder.innerClass_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"wayfinder:properties\\";}s:10:\\"levelClass\\";a:6:{s:4:\\"name\\";s:10:\\"levelClass\\";s:4:\\"desc\\";s:30:\\"prop_wayfinder.levelClass_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"wayfinder:properties\\";}s:9:\\"selfClass\\";a:6:{s:4:\\"name\\";s:9:\\"selfClass\\";s:4:\\"desc\\";s:29:\\"prop_wayfinder.selfClass_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"wayfinder:properties\\";}s:12:\\"webLinkClass\\";a:6:{s:4:\\"name\\";s:12:\\"webLinkClass\\";s:4:\\"desc\\";s:32:\\"prop_wayfinder.webLinkClass_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"wayfinder:properties\\";}s:8:\\"outerTpl\\";a:6:{s:4:\\"name\\";s:8:\\"outerTpl\\";s:4:\\"desc\\";s:28:\\"prop_wayfinder.outerTpl_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"wayfinder:properties\\";}s:6:\\"rowTpl\\";a:6:{s:4:\\"name\\";s:6:\\"rowTpl\\";s:4:\\"desc\\";s:26:\\"prop_wayfinder.rowTpl_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"wayfinder:properties\\";}s:12:\\"parentRowTpl\\";a:6:{s:4:\\"name\\";s:12:\\"parentRowTpl\\";s:4:\\"desc\\";s:32:\\"prop_wayfinder.parentRowTpl_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"wayfinder:properties\\";}s:16:\\"parentRowHereTpl\\";a:6:{s:4:\\"name\\";s:16:\\"parentRowHereTpl\\";s:4:\\"desc\\";s:36:\\"prop_wayfinder.parentRowHereTpl_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"wayfinder:properties\\";}s:7:\\"hereTpl\\";a:6:{s:4:\\"name\\";s:7:\\"hereTpl\\";s:4:\\"desc\\";s:27:\\"prop_wayfinder.hereTpl_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"wayfinder:properties\\";}s:8:\\"innerTpl\\";a:6:{s:4:\\"name\\";s:8:\\"innerTpl\\";s:4:\\"desc\\";s:28:\\"prop_wayfinder.innerTpl_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"wayfinder:properties\\";}s:11:\\"innerRowTpl\\";a:6:{s:4:\\"name\\";s:11:\\"innerRowTpl\\";s:4:\\"desc\\";s:31:\\"prop_wayfinder.innerRowTpl_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"wayfinder:properties\\";}s:12:\\"innerHereTpl\\";a:6:{s:4:\\"name\\";s:12:\\"innerHereTpl\\";s:4:\\"desc\\";s:32:\\"prop_wayfinder.innerHereTpl_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"wayfinder:properties\\";}s:18:\\"activeParentRowTpl\\";a:6:{s:4:\\"name\\";s:18:\\"activeParentRowTpl\\";s:4:\\"desc\\";s:38:\\"prop_wayfinder.activeParentRowTpl_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"wayfinder:properties\\";}s:18:\\"categoryFoldersTpl\\";a:6:{s:4:\\"name\\";s:18:\\"categoryFoldersTpl\\";s:4:\\"desc\\";s:38:\\"prop_wayfinder.categoryFoldersTpl_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"wayfinder:properties\\";}s:12:\\"startItemTpl\\";a:6:{s:4:\\"name\\";s:12:\\"startItemTpl\\";s:4:\\"desc\\";s:32:\\"prop_wayfinder.startItemTpl_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"wayfinder:properties\\";}s:11:\\"permissions\\";a:6:{s:4:\\"name\\";s:11:\\"permissions\\";s:4:\\"desc\\";s:31:\\"prop_wayfinder.permissions_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:4:\\"list\\";s:7:\\"lexicon\\";s:20:\\"wayfinder:properties\\";}s:6:\\"hereId\\";a:6:{s:4:\\"name\\";s:6:\\"hereId\\";s:4:\\"desc\\";s:26:\\"prop_wayfinder.hereId_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"wayfinder:properties\\";}s:5:\\"where\\";a:6:{s:4:\\"name\\";s:5:\\"where\\";s:4:\\"desc\\";s:25:\\"prop_wayfinder.where_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"wayfinder:properties\\";}s:9:\\"templates\\";a:6:{s:4:\\"name\\";s:9:\\"templates\\";s:4:\\"desc\\";s:29:\\"prop_wayfinder.templates_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"wayfinder:properties\\";}s:18:\\"previewUnpublished\\";a:6:{s:4:\\"name\\";s:18:\\"previewUnpublished\\";s:4:\\"desc\\";s:38:\\"prop_wayfinder.previewunpublished_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"wayfinder:properties\\";}}\', \'\', \'0\', \'\')',
      2 => 'INSERT INTO `[[++table_prefix]]site_snippets` (`id`, `source`, `property_preprocess`, `name`, `description`, `editor_type`, `category`, `cache_type`, `snippet`, `locked`, `properties`, `moduleguid`, `static`, `static_file`) VALUES (\'15\', \'0\', \'0\', \'getPage\', \'<b>1.2.4-pl</b> A generic wrapper snippet for returning paged results and navigation from snippets that return limitable collections.\', \'0\', \'0\', \'0\', \'/**\\n * @package getpage\\n */\\n$output = \\\'\\\';\\n\\n$properties =& $scriptProperties;\\n$properties[\\\'page\\\'] = (isset($_GET[$properties[\\\'pageVarKey\\\']]) && ($page = intval($_GET[$properties[\\\'pageVarKey\\\']]))) ? $page : null;\\nif ($properties[\\\'page\\\'] === null) {\\n    $properties[\\\'page\\\'] = (isset($_REQUEST[$properties[\\\'pageVarKey\\\']]) && ($page = intval($_REQUEST[$properties[\\\'pageVarKey\\\']]))) ? $page : 1;\\n}\\n$properties[\\\'limit\\\'] = (isset($_GET[\\\'limit\\\'])) ? intval($_GET[\\\'limit\\\']) : null;\\nif ($properties[\\\'limit\\\'] === null) {\\n    $properties[\\\'limit\\\'] = (isset($_REQUEST[\\\'limit\\\'])) ? intval($_REQUEST[\\\'limit\\\']) : intval($limit);\\n}\\n$properties[\\\'offset\\\'] = (!empty($properties[\\\'limit\\\']) && !empty($properties[\\\'page\\\'])) ? ($properties[\\\'limit\\\'] * ($properties[\\\'page\\\'] - 1)) : 0;\\n$properties[\\\'totalVar\\\'] = empty($totalVar) ? \\"total\\" : $totalVar;\\n$properties[$properties[\\\'totalVar\\\']] = !empty($properties[$properties[\\\'totalVar\\\']]) && $total = intval($properties[$properties[\\\'totalVar\\\']]) ? $total : 0;\\n$properties[\\\'pageOneLimit\\\'] = (!empty($pageOneLimit) && $pageOneLimit = intval($pageOneLimit)) ? $pageOneLimit : $properties[\\\'limit\\\'];\\n$properties[\\\'actualLimit\\\'] = $properties[\\\'limit\\\'];\\n$properties[\\\'pageLimit\\\'] = isset($pageLimit) && is_numeric($pageLimit) ? intval($pageLimit) : 5;\\n$properties[\\\'element\\\'] = empty($element) ? \\\'\\\' : $element;\\n$properties[\\\'elementClass\\\'] = empty($elementClass) ? \\\'modChunk\\\' : $elementClass;\\n$properties[\\\'pageNavVar\\\'] = empty($pageNavVar) ? \\\'page.nav\\\' : $pageNavVar;\\n$properties[\\\'pageNavTpl\\\'] = !isset($pageNavTpl) ? \\"<li[[+classes]]><a[[+classes]][[+title]] href=\\\\\\"[[+href]]\\\\\\">[[+pageNo]]</a></li>\\" : $pageNavTpl;\\n$properties[\\\'pageNavOuterTpl\\\'] = !isset($pageNavOuterTpl) ? \\"[[+first]][[+prev]][[+pages]][[+next]][[+last]]\\" : $pageNavOuterTpl;\\n$properties[\\\'pageActiveTpl\\\'] = !isset($pageActiveTpl) ? \\"<li[[+activeClasses:default=` class=\\\\\\"active\\\\\\"`]]><a[[+activeClasses:default=` class=\\\\\\"active\\\\\\"`]][[+title]] href=\\\\\\"[[+href]]\\\\\\">[[+pageNo]]</a></li>\\" : $pageActiveTpl;\\n$properties[\\\'pageFirstTpl\\\'] = !isset($pageFirstTpl) ? \\"<li class=\\\\\\"control\\\\\\"><a[[+title]] href=\\\\\\"[[+href]]\\\\\\">First</a></li>\\" : $pageFirstTpl;\\n$properties[\\\'pageLastTpl\\\'] = !isset($pageLastTpl) ? \\"<li class=\\\\\\"control\\\\\\"><a[[+title]] href=\\\\\\"[[+href]]\\\\\\">Last</a></li>\\" : $pageLastTpl;\\n$properties[\\\'pagePrevTpl\\\'] = !isset($pagePrevTpl) ? \\"<li class=\\\\\\"control\\\\\\"><a[[+title]] href=\\\\\\"[[+href]]\\\\\\">&lt;&lt;</a></li>\\" : $pagePrevTpl;\\n$properties[\\\'pageNextTpl\\\'] = !isset($pageNextTpl) ? \\"<li class=\\\\\\"control\\\\\\"><a[[+title]] href=\\\\\\"[[+href]]\\\\\\">&gt;&gt;</a></li>\\" : $pageNextTpl;\\n$properties[\\\'toPlaceholder\\\'] = !empty($toPlaceholder) ? $toPlaceholder : \\\'\\\';\\n$properties[\\\'cache\\\'] = isset($cache) ? (boolean) $cache : (boolean) $modx->getOption(\\\'cache_resource\\\', null, false);\\nif (empty($cache_key)) $properties[xPDO::OPT_CACHE_KEY] = $modx->getOption(\\\'cache_resource_key\\\', null, \\\'resource\\\');\\nif (empty($cache_handler)) $properties[xPDO::OPT_CACHE_HANDLER] = $modx->getOption(\\\'cache_resource_handler\\\', null, \\\'xPDOFileCache\\\');\\nif (empty($cache_expires)) $properties[xPDO::OPT_CACHE_EXPIRES] = (integer) $modx->getOption(\\\'cache_resource_expires\\\', null, 0);\\n\\nif ($properties[\\\'page\\\'] == 1 && $properties[\\\'pageOneLimit\\\'] !== $properties[\\\'actualLimit\\\']) {\\n    $properties[\\\'limit\\\'] = $properties[\\\'pageOneLimit\\\'];\\n}\\n\\nif ($properties[\\\'cache\\\']) {\\n    $properties[\\\'cachePageKey\\\'] = $modx->resource->getCacheKey() . \\\'/\\\' . $properties[\\\'page\\\'] . \\\'/\\\' . md5(http_build_query($modx->request->getParameters()) . http_build_query($scriptProperties));\\n    $properties[\\\'cacheOptions\\\'] = array(\\n        xPDO::OPT_CACHE_KEY => $properties[xPDO::OPT_CACHE_KEY],\\n        xPDO::OPT_CACHE_HANDLER => $properties[xPDO::OPT_CACHE_HANDLER],\\n        xPDO::OPT_CACHE_EXPIRES => $properties[xPDO::OPT_CACHE_EXPIRES],\\n    );\\n}\\n$cached = false;\\nif ($properties[\\\'cache\\\']) {\\n    if ($modx->getCacheManager()) {\\n        $cached = $modx->cacheManager->get($properties[\\\'cachePageKey\\\'], $properties[\\\'cacheOptions\\\']);\\n    }\\n}\\nif (empty($cached) || !isset($cached[\\\'properties\\\']) || !isset($cached[\\\'output\\\'])) {\\n    $elementObj = $modx->getObject($properties[\\\'elementClass\\\'], array(\\\'name\\\' => $properties[\\\'element\\\']));\\n    if ($elementObj) {\\n        $elementObj->setCacheable(false);\\n        if (!empty($properties[\\\'toPlaceholder\\\'])) {\\n            $elementObj->process($properties);\\n            $output = $modx->getPlaceholder($properties[\\\'toPlaceholder\\\']);\\n        } else {\\n            $output = $elementObj->process($properties);\\n        }\\n    }\\n\\n    include_once $modx->getOption(\\\'getpage.core_path\\\',$properties,$modx->getOption(\\\'core_path\\\', $properties, MODX_CORE_PATH) . \\\'components/getpage/\\\').\\\'include.getpage.php\\\';\\n\\n    $qs = $modx->request->getParameters();\\n    $properties[\\\'qs\\\'] =& $qs;\\n\\n    $totalSet = $modx->getPlaceholder($properties[\\\'totalVar\\\']);\\n    $properties[$properties[\\\'totalVar\\\']] = (($totalSet = intval($totalSet)) ? $totalSet : $properties[$properties[\\\'totalVar\\\']]);\\n    if (!empty($properties[$properties[\\\'totalVar\\\']]) && !empty($properties[\\\'actualLimit\\\'])) {\\n        if ($properties[\\\'pageOneLimit\\\'] !== $properties[\\\'actualLimit\\\']) {\\n            $adjustedTotal = $properties[$properties[\\\'totalVar\\\']] - $properties[\\\'pageOneLimit\\\'];\\n            $properties[\\\'pageCount\\\'] = $adjustedTotal > 0 ? ceil($adjustedTotal / $properties[\\\'actualLimit\\\']) + 1 : 1;\\n        } else {\\n            $properties[\\\'pageCount\\\'] = ceil($properties[$properties[\\\'totalVar\\\']] / $properties[\\\'actualLimit\\\']);\\n        }\\n    } else {\\n        $properties[\\\'pageCount\\\'] = 1;\\n    }\\n    if (empty($properties[$properties[\\\'totalVar\\\']]) || empty($properties[\\\'actualLimit\\\']) || $properties[$properties[\\\'totalVar\\\']] <= $properties[\\\'actualLimit\\\'] || ($properties[\\\'page\\\'] == 1 && $properties[$properties[\\\'totalVar\\\']] <= $properties[\\\'pageOneLimit\\\'])) {\\n        $properties[\\\'page\\\'] = 1;\\n    } else {\\n        $pageNav = getpage_buildControls($modx, $properties);\\n        $properties[$properties[\\\'pageNavVar\\\']] = $modx->newObject(\\\'modChunk\\\')->process(array_merge($properties, $pageNav), $properties[\\\'pageNavOuterTpl\\\']);\\n        if ($properties[\\\'page\\\'] > 1) {\\n            $qs[$properties[\\\'pageVarKey\\\']] = $properties[\\\'page\\\'];\\n        }\\n    }\\n\\n    $properties[\\\'firstItem\\\'] = $properties[\\\'offset\\\'] + 1;\\n    $properties[\\\'lastItem\\\'] = ($properties[\\\'offset\\\'] + $properties[\\\'limit\\\']) < $totalSet ? ($properties[\\\'offset\\\'] + $properties[\\\'limit\\\']) : $totalSet;\\n\\n    $properties[\\\'pageUrl\\\'] = $modx->makeUrl($modx->resource->get(\\\'id\\\'), \\\'\\\', $qs);\\n    if ($properties[\\\'cache\\\'] && $modx->getCacheManager()) {\\n        $cached = array(\\\'properties\\\' => $properties, \\\'output\\\' => $output);\\n        $modx->cacheManager->set($properties[\\\'cachePageKey\\\'], $cached, $properties[xPDO::OPT_CACHE_EXPIRES], $properties[\\\'cacheOptions\\\']);\\n    }\\n} else {\\n    $properties = $cached[\\\'properties\\\'];\\n    $output = $cached[\\\'output\\\'];\\n}\\n$modx->setPlaceholders($properties, $properties[\\\'namespace\\\']);\\nif (!empty($properties[\\\'toPlaceholder\\\'])) {\\n    $modx->setPlaceholder($properties[\\\'toPlaceholder\\\'], $output);\\n    $output = \\\'\\\';\\n}\\n\\nreturn $output;\', \'0\', \'a:21:{s:9:\\"namespace\\";a:7:{s:4:\\"name\\";s:9:\\"namespace\\";s:4:\\"desc\\";s:114:\\"An execution namespace that serves as a prefix for placeholders set by a specific instance of the getPage snippet.\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:5:\\"limit\\";a:7:{s:4:\\"name\\";s:5:\\"limit\\";s:4:\\"desc\\";s:62:\\"The result limit per page; can be overridden in the $_REQUEST.\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:2:\\"10\\";s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:6:\\"offset\\";a:7:{s:4:\\"name\\";s:6:\\"offset\\";s:4:\\"desc\\";s:171:\\"The offset, or record position to start at within the collection for rendering results for the current page; should be calculated based on page variable set in pageVarKey.\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:1:\\"0\\";s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:4:\\"page\\";a:7:{s:4:\\"name\\";s:4:\\"page\\";s:4:\\"desc\\";s:136:\\"The page to display; this is determined based on the value indicated by the page variable set in pageVarKey, typically in the $_REQUEST.\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:1:\\"0\\";s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:10:\\"pageVarKey\\";a:7:{s:4:\\"name\\";s:10:\\"pageVarKey\\";s:4:\\"desc\\";s:54:\\"The key of a property that indicates the current page.\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:4:\\"page\\";s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:8:\\"totalVar\\";a:7:{s:4:\\"name\\";s:8:\\"totalVar\\";s:4:\\"desc\\";s:101:\\"The key of a placeholder that must contain the total records in the limitable collection being paged.\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:5:\\"total\\";s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:9:\\"pageLimit\\";a:7:{s:4:\\"name\\";s:9:\\"pageLimit\\";s:4:\\"desc\\";s:69:\\"The maximum number of pages to display when rendering paging controls\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:1:\\"5\\";s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:12:\\"elementClass\\";a:7:{s:4:\\"name\\";s:12:\\"elementClass\\";s:4:\\"desc\\";s:73:\\"The class of element that will be called by the getPage snippet instance.\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:10:\\"modSnippet\\";s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:10:\\"pageNavVar\\";a:7:{s:4:\\"name\\";s:10:\\"pageNavVar\\";s:4:\\"desc\\";s:71:\\"The key of a placeholder to be set with the paging navigation controls.\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:8:\\"page.nav\\";s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:10:\\"pageNavTpl\\";a:7:{s:4:\\"name\\";s:10:\\"pageNavTpl\\";s:4:\\"desc\\";s:54:\\"Content representing a single page navigation control.\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:78:\\"<li[[+classes]]><a[[+classes]][[+title]] href=\\"[[+href]]\\">[[+pageNo]]</a></li>\\";s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:15:\\"pageNavOuterTpl\\";a:7:{s:4:\\"name\\";s:15:\\"pageNavOuterTpl\\";s:4:\\"desc\\";s:64:\\"Content representing the layout of the page navigation controls.\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:47:\\"[[+first]][[+prev]][[+pages]][[+next]][[+last]]\\";s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:13:\\"pageActiveTpl\\";a:7:{s:4:\\"name\\";s:13:\\"pageActiveTpl\\";s:4:\\"desc\\";s:57:\\"Content representing the current page navigation control.\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:116:\\"<li[[+activeClasses]]><a[[+activeClasses:default=` class=\\"active\\"`]][[+title]] href=\\"[[+href]]\\">[[+pageNo]]</a></li>\\";s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:12:\\"pageFirstTpl\\";a:7:{s:4:\\"name\\";s:12:\\"pageFirstTpl\\";s:4:\\"desc\\";s:55:\\"Content representing the first page navigation control.\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:76:\\"<li class=\\"control\\"><a[[+classes]][[+title]] href=\\"[[+href]]\\">First</a></li>\\";s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:11:\\"pageLastTpl\\";a:7:{s:4:\\"name\\";s:11:\\"pageLastTpl\\";s:4:\\"desc\\";s:54:\\"Content representing the last page navigation control.\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:75:\\"<li class=\\"control\\"><a[[+classes]][[+title]] href=\\"[[+href]]\\">Last</a></li>\\";s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:11:\\"pagePrevTpl\\";a:7:{s:4:\\"name\\";s:11:\\"pagePrevTpl\\";s:4:\\"desc\\";s:58:\\"Content representing the previous page navigation control.\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:79:\\"<li class=\\"control\\"><a[[+classes]][[+title]] href=\\"[[+href]]\\">&lt;&lt;</a></li>\\";s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:11:\\"pageNextTpl\\";a:7:{s:4:\\"name\\";s:11:\\"pageNextTpl\\";s:4:\\"desc\\";s:54:\\"Content representing the next page navigation control.\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:79:\\"<li class=\\"control\\"><a[[+classes]][[+title]] href=\\"[[+href]]\\">&gt;&gt;</a></li>\\";s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:5:\\"cache\\";a:7:{s:4:\\"name\\";s:5:\\"cache\\";s:4:\\"desc\\";s:84:\\"If true, unique page requests will be cached according to addition cache properties.\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:0;s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:9:\\"cache_key\\";a:7:{s:4:\\"name\\";s:9:\\"cache_key\\";s:4:\\"desc\\";s:120:\\"The key of the cache provider to use; leave empty to use the cache_resource_key cache partition (default is \\"resource\\").\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:0;s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:13:\\"cache_handler\\";a:7:{s:4:\\"name\\";s:13:\\"cache_handler\\";s:4:\\"desc\\";s:99:\\"The cache provider implementation to use; leave empty unless you are caching to a custom cache_key.\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:0;s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:13:\\"cache_expires\\";a:7:{s:4:\\"name\\";s:13:\\"cache_expires\\";s:4:\\"desc\\";s:141:\\"The number of seconds before the cached pages expire and must be regenerated; leave empty to use the cache provider option for cache_expires.\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:0;s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:13:\\"pageNavScheme\\";a:7:{s:4:\\"name\\";s:13:\\"pageNavScheme\\";s:4:\\"desc\\";s:145:\\"Optionally specify a scheme for use when generating page navigation links; will use link_tag_scheme if empty or not specified (default is empty).\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}}\', \'\', \'0\', \'\')',
      3 => 'INSERT INTO `[[++table_prefix]]site_snippets` (`id`, `source`, `property_preprocess`, `name`, `description`, `editor_type`, `category`, `cache_type`, `snippet`, `locked`, `properties`, `moduleguid`, `static`, `static_file`) VALUES (\'45\', \'10\', \'0\', \'modHybridAuth.postHook\', \'For Login.Register postHook\', \'0\', \'34\', \'0\', \'$success = true;\\n\\n$modx->setLogLevel(xPDO::LOG_LEVEL_DEBUG);\\n$modx->setLogTarget(\\\'FILE\\\');\\n\\n/*\\n    Try to get user by login\\n*/\\nif(empty($scriptProperties[\\\'fields\\\'][\\\'register.user\\\']) OR !$scriptProperties[\\\'fields\\\'][\\\'register.user\\\'] instanceOf modUser){\\n    $error = \\"User was not recived\\";\\n    $modx->log(xPDO::LOG_LEVEL_ERROR,$error);\\n    return $error;    \\n}\\n\\n//  else \\n$user = & $scriptProperties[\\\'fields\\\'][\\\'register.user\\\'];\\n\\n \\n// else\\nif(!empty($_SESSION[\\\'social_profile\\\'])){\\n    $provider_name = $_SESSION[\\\'social_profile\\\'][\\\'provider\\\'];\\n    $profile = $_SESSION[\\\'social_profile\\\'][\\\'profile\\\'];\\n    \\n    // Try to get active provider\\n    if(!$provider = $modx->getObject(\\\'modHybridAuthProvider\\\', array(\\n        \\"enabled\\"   => 1,\\n        \\"name\\"      => $provider_name,\\n    ))){\\n        $modx->log(xPDO::LOG_LEVEL_ERROR, \\"[modHybridAuth] Could not get active provider with identifier \\\'{$provider_name}\\\'\\");\\n        return $success;\\n    }\\n    \\n    // else\\n    \\n    // Check for existsing social profile\\n    $q = $modx->newQuery(\\\'modHybridAuthUserProfile\\\',array(\\n        \\\'identifier\\\'    => $profile[\\\'identifier\\\'],\\n        \\\'provider\\\' => $provider->get(\\\'id\\\'),\\n    ));\\n    $q->limit(1);\\n    \\n    // if profile not exists, create them\\n    if(!$modx->getCount(\\\'modHybridAuthUserProfile\\\', $q)){\\n        $socialProfile = $modx->newObject(\\\'modHybridAuthUserProfile\\\', $profile);\\n        $socialProfile->addOne($provider);\\n        $socialProfile->addOne($user);\\n        if(!$socialProfile->save()){\\n            $modx->log(xPDO::LOG_LEVEL_ERROR, \\"[modHybridAuth] Could not save social profile for user with id \\\'{$user->id}\\\'\\");\\n            $modx->log(xPDO::LOG_LEVEL_ERROR, print_r($profile, true));\\n            return $success;\\n        }\\n    }\\n    else{\\n        $modx->log(xPDO::LOG_LEVEL_INFO, \\"[modHybridAuth] Social profile with identifier \\\'{$profile[\\\'identifier\\\']}\\\' and provider \\\'{$provider_name}\\\' already exists.\\");\\n    }\\n}\\n\\nif($user){\\n    $user->addSessionContext($modx->context->key);\\n}\\n\\nreturn $success;\', \'0\', \'a:0:{}\', \'\', \'0\', \'\')',
      4 => 'INSERT INTO `[[++table_prefix]]site_snippets` (`id`, `source`, `property_preprocess`, `name`, `description`, `editor_type`, `category`, `cache_type`, `snippet`, `locked`, `properties`, `moduleguid`, `static`, `static_file`) VALUES (\'25\', \'0\', \'0\', \'GoogleSiteMap\', \'Builds the Google SiteMap XML.\', \'0\', \'15\', \'0\', \'/**\\n * GoogleSiteMap\\n *\\n * Copyright 2009-2010 by Shaun McCormick <shaun@modx.com>\\n *\\n * - Based on Michal Till\\\'s MODx Evolution GoogleSiteMap_XML snippet\\n *\\n * GoogleSiteMap is free software; you can redistribute it and/or modify it\\n * under the terms of the GNU General Public License as published by the Free\\n * Software Foundation; either version 2 of the License, or (at your option) any\\n * later version.\\n *\\n * GoogleSiteMap is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * GoogleSiteMap; if not, write to the Free Software Foundation, Inc., 59 Temple\\n * Place, Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package googlesitemap\\n */\\n/**\\n * GoogleSiteMap for MODx Revolution\\n *\\n * @package googlesitemap\\n */\\nrequire_once $modx->getOption(\\\'googlesitemap.core_path\\\',null,$modx->getOption(\\\'core_path\\\').\\\'components/googlesitemap/\\\').\\\'model/googlesitemap/googlesitemap.class.php\\\';\\n$GoogleSiteMap = new GoogleSiteMap($modx,$scriptProperties);\\n\\n/* setup default properties */\\n$googleSchema = $modx->getOption(\\\'googleSchema\\\',$scriptProperties,\\\'http://www.sitemaps.org/schemas/sitemap/0.9\\\');\\n$containerTpl = $modx->getOption(\\\'containerTpl\\\',$scriptProperties,\\\'gContainer\\\');\\n$startId = (int)$modx->getOption(\\\'startId\\\',$scriptProperties,0);\\n\\n/* get container tpl and content */\\nreturn $GoogleSiteMap->getChunk($containerTpl,array(\\n    \\\'schema\\\' => $googleSchema,\\n    \\\'items\\\' => $GoogleSiteMap->run($startId),\\n));\', \'0\', \'a:19:{s:16:\\"allowedtemplates\\";a:7:{s:4:\\"name\\";s:16:\\"allowedtemplates\\";s:4:\\"desc\\";s:30:\\"prop_gsm.allowedtemplates_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:7:\\"context\\";a:7:{s:4:\\"name\\";s:7:\\"context\\";s:4:\\"desc\\";s:21:\\"prop_gsm.context_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:8:\\"maxDepth\\";a:7:{s:4:\\"name\\";s:8:\\"maxDepth\\";s:4:\\"desc\\";s:22:\\"prop_gsm.maxdepth_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";i:0;s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:11:\\"hideDeleted\\";a:7:{s:4:\\"name\\";s:11:\\"hideDeleted\\";s:4:\\"desc\\";s:25:\\"prop_gsm.hidedeleted_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:10:\\"showHidden\\";a:7:{s:4:\\"name\\";s:10:\\"showHidden\\";s:4:\\"desc\\";s:24:\\"prop_gsm.showhidden_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:0;s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:12:\\"googleSchema\\";a:7:{s:4:\\"name\\";s:12:\\"googleSchema\\";s:4:\\"desc\\";s:26:\\"prop_gsm.googleschema_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:43:\\"http://www.sitemaps.org/schemas/sitemap/0.9\\";s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:9:\\"published\\";a:7:{s:4:\\"name\\";s:9:\\"published\\";s:4:\\"desc\\";s:23:\\"prop_gsm.published_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:10:\\"searchable\\";a:7:{s:4:\\"name\\";s:10:\\"searchable\\";s:4:\\"desc\\";s:24:\\"prop_gsm.searchable_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:16:\\"excludeResources\\";a:7:{s:4:\\"name\\";s:16:\\"excludeResources\\";s:4:\\"desc\\";s:30:\\"prop_gsm.excluderesources_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:17:\\"excludeChildrenOf\\";a:7:{s:4:\\"name\\";s:17:\\"excludeChildrenOf\\";s:4:\\"desc\\";s:31:\\"prop_gsm.excludechildrenof_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:6:\\"sortBy\\";a:7:{s:4:\\"name\\";s:6:\\"sortBy\\";s:4:\\"desc\\";s:20:\\"prop_gsm.sortby_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:9:\\"menuindex\\";s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:11:\\"sortByAlias\\";a:7:{s:4:\\"name\\";s:11:\\"sortByAlias\\";s:4:\\"desc\\";s:25:\\"prop_gsm.sortbyalias_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:11:\\"modResource\\";s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:7:\\"sortDir\\";a:7:{s:4:\\"name\\";s:7:\\"sortDir\\";s:4:\\"desc\\";s:21:\\"prop_gsm.sortdir_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:3:\\"ASC\\";s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:14:\\"templateFilter\\";a:7:{s:4:\\"name\\";s:14:\\"templateFilter\\";s:4:\\"desc\\";s:28:\\"prop_gsm.templatefilter_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:2:\\"id\\";s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:7:\\"itemTpl\\";a:7:{s:4:\\"name\\";s:7:\\"itemTpl\\";s:4:\\"desc\\";s:21:\\"prop_gsm.itemtpl_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:5:\\"gItem\\";s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:12:\\"containerTpl\\";a:7:{s:4:\\"name\\";s:12:\\"containerTpl\\";s:4:\\"desc\\";s:26:\\"prop_gsm.containertpl_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:10:\\"gContainer\\";s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:7:\\"startId\\";a:7:{s:4:\\"name\\";s:7:\\"startId\\";s:4:\\"desc\\";s:21:\\"prop_gsm.startid_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:1:\\"0\\";s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:5:\\"where\\";a:7:{s:4:\\"name\\";s:5:\\"where\\";s:4:\\"desc\\";s:19:\\"prop_gsm.where_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:10:\\"priorityTV\\";a:7:{s:4:\\"name\\";s:10:\\"priorityTV\\";s:4:\\"desc\\";s:24:\\"prop_gsm.prioritytv_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}}\', \'\', \'0\', \'\')',
      5 => 'INSERT INTO `[[++table_prefix]]site_snippets` (`id`, `source`, `property_preprocess`, `name`, `description`, `editor_type`, `category`, `cache_type`, `snippet`, `locked`, `properties`, `moduleguid`, `static`, `static_file`) VALUES (\'26\', \'0\', \'0\', \'Login\', \'Displays a login and logout form.\', \'0\', \'16\', \'0\', \'/**\\n * Login\\n *\\n * Copyright 2010 by Jason Coward <jason@modx.com> and Shaun McCormick\\n * <shaun@modx.com>\\n *\\n * Login is free software; you can redistribute it and/or modify it\\n * under the terms of the GNU General Public License as published by the Free\\n * Software Foundation; either version 2 of the License, or (at your option) any\\n * later version.\\n *\\n * Login is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * Login; if not, write to the Free Software Foundation, Inc., 59 Temple\\n * Place, Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package login\\n */\\n/**\\n * MODx Login Snippet\\n *\\n * This snippet handles login POSTs, sending the user back to where they came from or to a specific\\n * location if specified in the POST.\\n *\\n * @package login\\n *\\n * @property textfield actionKey The REQUEST variable containing the action to take.\\n * @property textfield loginKey The actionKey for login.\\n * @property textfield logoutKey The actionKey for logout.\\n * @property list tplType The type of template to expect for the views:\\n *  modChunk - name of chunk to use\\n *  file - full path to file to use as tpl\\n *  embedded - the tpl is embedded in the page content\\n *  inline - the tpl is inline content provided directly\\n * @property textfield loginTpl The template for the login view (content based on tplType)\\n * @property textfield logoutTpl The template for the logout view (content based on tplType)\\n * @property textfield errTpl The template for any errors that occur when processing an view\\n * @property list errTplType The type of template to expect for the error messages:\\n *  modChunk - name of chunk to use\\n *  file - full path to file to use as tpl\\n *  inline - the tpl is inline content provided directly\\n * @property integer logoutResourceId An explicit resource id to redirect users to on logout\\n * @property string loginMsg The string to use for the login action. Defaults to\\n * the lexicon string \\"login\\".\\n * @property string logoutMsg The string to use for the logout action. Defaults\\n * to the lexicon string \\"login.logout\\"\\n */\\nrequire_once $modx->getOption(\\\'login.core_path\\\',null,$modx->getOption(\\\'core_path\\\').\\\'components/login/\\\').\\\'model/login/login.class.php\\\';\\n$login = new Login($modx,$scriptProperties);\\nif (!is_object($login) || !($login instanceof Login)) return \\\'\\\';\\n\\n$controller = $login->loadController(\\\'Login\\\');\\n$output = $controller->run($scriptProperties);\\nreturn $output;\', \'0\', \'a:22:{s:9:\\"actionKey\\";a:7:{s:4:\\"name\\";s:9:\\"actionKey\\";s:4:\\"desc\\";s:25:\\"prop_login.actionkey_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:7:\\"service\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:8:\\"loginKey\\";a:7:{s:4:\\"name\\";s:8:\\"loginKey\\";s:4:\\"desc\\";s:24:\\"prop_login.loginkey_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:5:\\"login\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:9:\\"logoutKey\\";a:7:{s:4:\\"name\\";s:9:\\"logoutKey\\";s:4:\\"desc\\";s:25:\\"prop_login.logoutkey_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:6:\\"logout\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:7:\\"tplType\\";a:7:{s:4:\\"name\\";s:7:\\"tplType\\";s:4:\\"desc\\";s:23:\\"prop_login.tpltype_desc\\";s:4:\\"type\\";s:4:\\"list\\";s:7:\\"options\\";a:4:{i:0;a:2:{s:5:\\"value\\";s:8:\\"modChunk\\";s:4:\\"text\\";s:18:\\"opt_register.chunk\\";}i:1;a:2:{s:5:\\"value\\";s:4:\\"file\\";s:4:\\"text\\";s:17:\\"opt_register.file\\";}i:2;a:2:{s:5:\\"value\\";s:6:\\"inline\\";s:4:\\"text\\";s:19:\\"opt_register.inline\\";}i:3;a:2:{s:5:\\"value\\";s:8:\\"embedded\\";s:4:\\"text\\";s:21:\\"opt_register.embedded\\";}}s:5:\\"value\\";s:8:\\"modChunk\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:8:\\"loginTpl\\";a:7:{s:4:\\"name\\";s:8:\\"loginTpl\\";s:4:\\"desc\\";s:24:\\"prop_login.logintpl_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:11:\\"lgnLoginTpl\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:9:\\"logoutTpl\\";a:7:{s:4:\\"name\\";s:9:\\"logoutTpl\\";s:4:\\"desc\\";s:25:\\"prop_login.logouttpl_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:12:\\"lgnLogoutTpl\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:8:\\"preHooks\\";a:7:{s:4:\\"name\\";s:8:\\"preHooks\\";s:4:\\"desc\\";s:24:\\"prop_login.prehooks_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:9:\\"postHooks\\";a:7:{s:4:\\"name\\";s:9:\\"postHooks\\";s:4:\\"desc\\";s:25:\\"prop_login.posthooks_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:6:\\"errTpl\\";a:7:{s:4:\\"name\\";s:6:\\"errTpl\\";s:4:\\"desc\\";s:22:\\"prop_login.errtpl_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:9:\\"lgnErrTpl\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:10:\\"errTplType\\";a:7:{s:4:\\"name\\";s:10:\\"errTplType\\";s:4:\\"desc\\";s:26:\\"prop_login.errtpltype_desc\\";s:4:\\"type\\";s:4:\\"list\\";s:7:\\"options\\";a:4:{i:0;a:2:{s:5:\\"value\\";s:8:\\"modChunk\\";s:4:\\"text\\";s:18:\\"opt_register.chunk\\";}i:1;a:2:{s:5:\\"value\\";s:4:\\"file\\";s:4:\\"text\\";s:17:\\"opt_register.file\\";}i:2;a:2:{s:5:\\"value\\";s:6:\\"inline\\";s:4:\\"text\\";s:19:\\"opt_register.inline\\";}i:3;a:2:{s:5:\\"value\\";s:8:\\"embedded\\";s:4:\\"text\\";s:21:\\"opt_register.embedded\\";}}s:5:\\"value\\";s:8:\\"modChunk\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:15:\\"loginResourceId\\";a:7:{s:4:\\"name\\";s:15:\\"loginResourceId\\";s:4:\\"desc\\";s:31:\\"prop_login.loginresourceid_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";i:0;s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:19:\\"loginResourceParams\\";a:7:{s:4:\\"name\\";s:19:\\"loginResourceParams\\";s:4:\\"desc\\";s:35:\\"prop_login.loginresourceparams_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:16:\\"logoutResourceId\\";a:7:{s:4:\\"name\\";s:16:\\"logoutResourceId\\";s:4:\\"desc\\";s:32:\\"prop_login.logoutresourceid_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";i:0;s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:20:\\"logoutResourceParams\\";a:7:{s:4:\\"name\\";s:20:\\"logoutResourceParams\\";s:4:\\"desc\\";s:36:\\"prop_login.logoutresourceparams_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:8:\\"loginMsg\\";a:7:{s:4:\\"name\\";s:8:\\"loginMsg\\";s:4:\\"desc\\";s:24:\\"prop_login.loginmsg_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:9:\\"logoutMsg\\";a:7:{s:4:\\"name\\";s:9:\\"logoutMsg\\";s:4:\\"desc\\";s:25:\\"prop_login.logoutmsg_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:15:\\"redirectToPrior\\";a:7:{s:4:\\"name\\";s:15:\\"redirectToPrior\\";s:4:\\"desc\\";s:31:\\"prop_login.redirecttoprior_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:22:\\"redirectToOnFailedAuth\\";a:7:{s:4:\\"name\\";s:22:\\"redirectToOnFailedAuth\\";s:4:\\"desc\\";s:38:\\"prop_login.redirecttoonfailedauth_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:13:\\"rememberMeKey\\";a:7:{s:4:\\"name\\";s:13:\\"rememberMeKey\\";s:4:\\"desc\\";s:29:\\"prop_login.remembermekey_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:10:\\"rememberme\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:8:\\"contexts\\";a:7:{s:4:\\"name\\";s:8:\\"contexts\\";s:4:\\"desc\\";s:24:\\"prop_login.contexts_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:13:\\"toPlaceholder\\";a:7:{s:4:\\"name\\";s:13:\\"toPlaceholder\\";s:4:\\"desc\\";s:29:\\"prop_login.toplaceholder_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:14:\\"recaptchaTheme\\";a:7:{s:4:\\"name\\";s:14:\\"recaptchaTheme\\";s:4:\\"desc\\";s:33:\\"prop_register.recaptchatheme_desc\\";s:4:\\"type\\";s:4:\\"list\\";s:7:\\"options\\";a:4:{i:0;a:2:{s:4:\\"text\\";s:16:\\"opt_register.red\\";s:5:\\"value\\";s:3:\\"red\\";}i:1;a:2:{s:4:\\"text\\";s:18:\\"opt_register.white\\";s:5:\\"value\\";s:5:\\"white\\";}i:2;a:2:{s:4:\\"text\\";s:18:\\"opt_register.clean\\";s:5:\\"value\\";s:5:\\"clean\\";}i:3;a:2:{s:4:\\"text\\";s:23:\\"opt_register.blackglass\\";s:5:\\"value\\";s:10:\\"blackglass\\";}}s:5:\\"value\\";s:5:\\"clean\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}}\', \'\', \'0\', \'\')',
      6 => 'INSERT INTO `[[++table_prefix]]site_snippets` (`id`, `source`, `property_preprocess`, `name`, `description`, `editor_type`, `category`, `cache_type`, `snippet`, `locked`, `properties`, `moduleguid`, `static`, `static_file`) VALUES (\'27\', \'0\', \'0\', \'ForgotPassword\', \'Displays a forgot password form.\', \'0\', \'16\', \'0\', \'/**\\n * ForgotPassword\\n *\\n * Copyright 2010 by Jason Coward <jason@modx.com> and Shaun McCormick\\n * <shaun@modx.com>\\n *\\n * ForgotPassword is free software; you can redistribute it and/or modify it\\n * under the terms of the GNU General Public License as published by the Free\\n * Software Foundation; either version 2 of the License, or (at your option) any\\n * later version.\\n *\\n * ForgotPassword is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * ForgotPassword; if not, write to the Free Software Foundation, Inc., 59 Temple\\n * Place, Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package login\\n */\\n/**\\n * MODx ForgotPassword Snippet. Displays a form for users who have forgotten\\n * their password and gives them the ability to retrieve it.\\n *\\n * @package login\\n */\\nrequire_once $modx->getOption(\\\'login.core_path\\\',null,$modx->getOption(\\\'core_path\\\').\\\'components/login/\\\').\\\'model/login/login.class.php\\\';\\n$login = new Login($modx,$scriptProperties);\\n\\n$controller = $login->loadController(\\\'ForgotPassword\\\');\\n$output = $controller->run($scriptProperties);\\nreturn $output;\', \'0\', \'a:13:{s:8:\\"emailTpl\\";a:7:{s:4:\\"name\\";s:8:\\"emailTpl\\";s:4:\\"desc\\";s:33:\\"prop_forgotpassword.emailtpl_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:18:\\"lgnForgotPassEmail\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:11:\\"emailTplAlt\\";a:7:{s:4:\\"name\\";s:11:\\"emailTplAlt\\";s:4:\\"desc\\";s:36:\\"prop_forgotpassword.emailtplalt_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:12:\\"emailTplType\\";a:7:{s:4:\\"name\\";s:12:\\"emailTplType\\";s:4:\\"desc\\";s:37:\\"prop_forgotpassword.emailtpltype_desc\\";s:4:\\"type\\";s:4:\\"list\\";s:7:\\"options\\";a:4:{i:0;a:2:{s:5:\\"value\\";s:8:\\"modChunk\\";s:4:\\"text\\";s:18:\\"opt_register.chunk\\";}i:1;a:2:{s:5:\\"value\\";s:4:\\"file\\";s:4:\\"text\\";s:17:\\"opt_register.file\\";}i:2;a:2:{s:5:\\"value\\";s:6:\\"inline\\";s:4:\\"text\\";s:19:\\"opt_register.inline\\";}i:3;a:2:{s:5:\\"value\\";s:8:\\"embedded\\";s:4:\\"text\\";s:21:\\"opt_register.embedded\\";}}s:5:\\"value\\";s:8:\\"modChunk\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:7:\\"sentTpl\\";a:7:{s:4:\\"name\\";s:7:\\"sentTpl\\";s:4:\\"desc\\";s:32:\\"prop_forgotpassword.senttpl_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:20:\\"lgnForgotPassSentTpl\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:11:\\"sentTplType\\";a:7:{s:4:\\"name\\";s:11:\\"sentTplType\\";s:4:\\"desc\\";s:36:\\"prop_forgotpassword.senttpltype_desc\\";s:4:\\"type\\";s:4:\\"list\\";s:7:\\"options\\";a:4:{i:0;a:2:{s:5:\\"value\\";s:8:\\"modChunk\\";s:4:\\"text\\";s:18:\\"opt_register.chunk\\";}i:1;a:2:{s:5:\\"value\\";s:4:\\"file\\";s:4:\\"text\\";s:17:\\"opt_register.file\\";}i:2;a:2:{s:5:\\"value\\";s:6:\\"inline\\";s:4:\\"text\\";s:19:\\"opt_register.inline\\";}i:3;a:2:{s:5:\\"value\\";s:8:\\"embedded\\";s:4:\\"text\\";s:21:\\"opt_register.embedded\\";}}s:5:\\"value\\";s:8:\\"modChunk\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:3:\\"tpl\\";a:7:{s:4:\\"name\\";s:3:\\"tpl\\";s:4:\\"desc\\";s:28:\\"prop_forgotpassword.tpl_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:16:\\"lgnForgotPassTpl\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:7:\\"tplType\\";a:7:{s:4:\\"name\\";s:7:\\"tplType\\";s:4:\\"desc\\";s:32:\\"prop_forgotpassword.tpltype_desc\\";s:4:\\"type\\";s:4:\\"list\\";s:7:\\"options\\";a:4:{i:0;a:2:{s:5:\\"value\\";s:8:\\"modChunk\\";s:4:\\"text\\";s:18:\\"opt_register.chunk\\";}i:1;a:2:{s:5:\\"value\\";s:4:\\"file\\";s:4:\\"text\\";s:17:\\"opt_register.file\\";}i:2;a:2:{s:5:\\"value\\";s:6:\\"inline\\";s:4:\\"text\\";s:19:\\"opt_register.inline\\";}i:3;a:2:{s:5:\\"value\\";s:8:\\"embedded\\";s:4:\\"text\\";s:21:\\"opt_register.embedded\\";}}s:5:\\"value\\";s:8:\\"modChunk\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:6:\\"errTpl\\";a:7:{s:4:\\"name\\";s:6:\\"errTpl\\";s:4:\\"desc\\";s:31:\\"prop_forgotpassword.errtpl_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:9:\\"lgnErrTpl\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:10:\\"errTplType\\";a:7:{s:4:\\"name\\";s:10:\\"errTplType\\";s:4:\\"desc\\";s:35:\\"prop_forgotpassword.errtpltype_desc\\";s:4:\\"type\\";s:4:\\"list\\";s:7:\\"options\\";a:4:{i:0;a:2:{s:5:\\"value\\";s:8:\\"modChunk\\";s:4:\\"text\\";s:18:\\"opt_register.chunk\\";}i:1;a:2:{s:5:\\"value\\";s:4:\\"file\\";s:4:\\"text\\";s:17:\\"opt_register.file\\";}i:2;a:2:{s:5:\\"value\\";s:6:\\"inline\\";s:4:\\"text\\";s:19:\\"opt_register.inline\\";}i:3;a:2:{s:5:\\"value\\";s:8:\\"embedded\\";s:4:\\"text\\";s:21:\\"opt_register.embedded\\";}}s:5:\\"value\\";s:8:\\"modChunk\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:12:\\"emailSubject\\";a:7:{s:4:\\"name\\";s:12:\\"emailSubject\\";s:4:\\"desc\\";s:37:\\"prop_forgotpassword.emailsubject_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:15:\\"resetResourceId\\";a:7:{s:4:\\"name\\";s:15:\\"resetResourceId\\";s:4:\\"desc\\";s:40:\\"prop_forgotpassword.resetresourceid_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";i:1;s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:10:\\"redirectTo\\";a:7:{s:4:\\"name\\";s:10:\\"redirectTo\\";s:4:\\"desc\\";s:35:\\"prop_forgotpassword.redirectto_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:14:\\"redirectParams\\";a:7:{s:4:\\"name\\";s:14:\\"redirectParams\\";s:4:\\"desc\\";s:39:\\"prop_forgotpassword.redirectparams_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}}\', \'\', \'0\', \'\')',
      7 => 'INSERT INTO `[[++table_prefix]]site_snippets` (`id`, `source`, `property_preprocess`, `name`, `description`, `editor_type`, `category`, `cache_type`, `snippet`, `locked`, `properties`, `moduleguid`, `static`, `static_file`) VALUES (\'28\', \'0\', \'0\', \'ResetPassword\', \'Resets a password from a confirmation email.\', \'0\', \'16\', \'0\', \'/**\\n * ResetPassword\\n *\\n * Copyright 2010 by Shaun McCormick <shaun@modx.com>\\n *\\n * ResetPassword is free software; you can redistribute it and/or modify it\\n * under the terms of the GNU General Public License as published by the Free\\n * Software Foundation; either version 2 of the License, or (at your option) any\\n * later version.\\n *\\n * ResetPassword is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * ResetPassword; if not, write to the Free Software Foundation, Inc., 59 Temple\\n * Place, Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package login\\n */\\n/**\\n * MODx ResetPassword Snippet. Snippet to place on an activation\\n * page that the user using the ForgotPassword snippet would be sent to via the\\n * reset email.\\n *\\n * @package login\\n */\\nif (empty($_REQUEST[\\\'lp\\\']) || empty($_REQUEST[\\\'lu\\\'])) {\\n    return \\\'\\\';\\n}\\nrequire_once $modx->getOption(\\\'login.core_path\\\',null,$modx->getOption(\\\'core_path\\\').\\\'components/login/\\\').\\\'model/login/login.class.php\\\';\\n$login = new Login($modx,$scriptProperties);\\n\\n$controller = $login->loadController(\\\'ResetPassword\\\');\\n$output = $controller->run($scriptProperties);\\nreturn $output;\', \'0\', \'a:3:{s:3:\\"tpl\\";a:7:{s:4:\\"name\\";s:3:\\"tpl\\";s:4:\\"desc\\";s:27:\\"prop_resetpassword.tpl_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:15:\\"lgnResetPassTpl\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:7:\\"tplType\\";a:7:{s:4:\\"name\\";s:7:\\"tplType\\";s:4:\\"desc\\";s:31:\\"prop_resetpassword.tpltype_desc\\";s:4:\\"type\\";s:4:\\"list\\";s:7:\\"options\\";a:4:{i:0;a:2:{s:5:\\"value\\";s:8:\\"modChunk\\";s:4:\\"text\\";s:18:\\"opt_register.chunk\\";}i:1;a:2:{s:5:\\"value\\";s:4:\\"file\\";s:4:\\"text\\";s:17:\\"opt_register.file\\";}i:2;a:2:{s:5:\\"value\\";s:6:\\"inline\\";s:4:\\"text\\";s:19:\\"opt_register.inline\\";}i:3;a:2:{s:5:\\"value\\";s:8:\\"embedded\\";s:4:\\"text\\";s:21:\\"opt_register.embedded\\";}}s:5:\\"value\\";s:8:\\"modChunk\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:15:\\"loginResourceId\\";a:7:{s:4:\\"name\\";s:15:\\"loginResourceId\\";s:4:\\"desc\\";s:39:\\"prop_resetpassword.loginresourceid_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";i:1;s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}}\', \'\', \'0\', \'\')',
      8 => 'INSERT INTO `[[++table_prefix]]site_snippets` (`id`, `source`, `property_preprocess`, `name`, `description`, `editor_type`, `category`, `cache_type`, `snippet`, `locked`, `properties`, `moduleguid`, `static`, `static_file`) VALUES (\'29\', \'0\', \'0\', \'Register\', \'Handles forms for registering users on the front-end.\', \'0\', \'16\', \'0\', \'/**\\n * Register\\n *\\n * Copyright 2010 by Shaun McCormick <shaun@modx.com>\\n *\\n * Register is free software; you can redistribute it and/or modify it under the\\n * terms of the GNU General Public License as published by the Free Software\\n * Foundation; either version 2 of the License, or (at your option) any later\\n * version.\\n *\\n * Register is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * Register; if not, write to the Free Software Foundation, Inc., 59 Temple\\n * Place, Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package login\\n */\\n/**\\n * MODx Register Snippet. Handles User registrations.\\n * \\n * @package login\\n */\\nrequire_once $modx->getOption(\\\'login.core_path\\\',null,$modx->getOption(\\\'core_path\\\').\\\'components/login/\\\').\\\'model/login/login.class.php\\\';\\n$login = new Login($modx,$scriptProperties);\\n\\n$controller = $login->loadController(\\\'Register\\\');\\n$output = $controller->run($scriptProperties);\\nreturn $output;\', \'0\', \'a:40:{s:9:\\"submitVar\\";a:7:{s:4:\\"name\\";s:9:\\"submitVar\\";s:4:\\"desc\\";s:28:\\"prop_register.submitvar_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:10:\\"usergroups\\";a:7:{s:4:\\"name\\";s:10:\\"usergroups\\";s:4:\\"desc\\";s:29:\\"prop_register.usergroups_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:15:\\"usergroupsField\\";a:7:{s:4:\\"name\\";s:15:\\"usergroupsField\\";s:4:\\"desc\\";s:34:\\"prop_register.usergroupsfield_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:19:\\"submittedResourceId\\";a:7:{s:4:\\"name\\";s:19:\\"submittedResourceId\\";s:4:\\"desc\\";s:38:\\"prop_register.submittedresourceid_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:13:\\"usernameField\\";a:7:{s:4:\\"name\\";s:13:\\"usernameField\\";s:4:\\"desc\\";s:32:\\"prop_register.usernamefield_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:8:\\"username\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:13:\\"passwordField\\";a:7:{s:4:\\"name\\";s:13:\\"passwordField\\";s:4:\\"desc\\";s:32:\\"prop_register.passwordfield_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:8:\\"password\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:16:\\"validatePassword\\";a:7:{s:4:\\"name\\";s:16:\\"validatePassword\\";s:4:\\"desc\\";s:35:\\"prop_register.validatepassword_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:16:\\"generatePassword\\";a:7:{s:4:\\"name\\";s:16:\\"generatePassword\\";s:4:\\"desc\\";s:35:\\"prop_register.generatepassword_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:12:\\"trimPassword\\";a:7:{s:4:\\"name\\";s:12:\\"trimPassword\\";s:4:\\"desc\\";s:31:\\"prop_register.trimpassword_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:22:\\"ensurePasswordStrength\\";a:7:{s:4:\\"name\\";s:22:\\"ensurePasswordStrength\\";s:4:\\"desc\\";s:41:\\"prop_register.ensurePasswordStrength_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:21:\\"passwordWordSeparator\\";a:7:{s:4:\\"name\\";s:21:\\"passwordWordSeparator\\";s:4:\\"desc\\";s:40:\\"prop_register.passwordWordSeparator_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:1:\\" \\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:30:\\"minimumStrongPasswordWordCount\\";a:7:{s:4:\\"name\\";s:30:\\"minimumStrongPasswordWordCount\\";s:4:\\"desc\\";s:49:\\"prop_register.minimumStrongPasswordWordCount_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";i:3;s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:32:\\"maximumPossibleStrongerPasswords\\";a:7:{s:4:\\"name\\";s:32:\\"maximumPossibleStrongerPasswords\\";s:4:\\"desc\\";s:51:\\"prop_register.maximumPossibleStrongerPasswords_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";i:25;s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:33:\\"ensurePasswordStrengthSuggestions\\";a:7:{s:4:\\"name\\";s:33:\\"ensurePasswordStrengthSuggestions\\";s:4:\\"desc\\";s:52:\\"prop_register.ensurePasswordStrengthSuggestions_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:13:\\"allowedFields\\";a:7:{s:4:\\"name\\";s:13:\\"allowedFields\\";s:4:\\"desc\\";s:32:\\"prop_register.allowedfields_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:10:\\"emailField\\";a:7:{s:4:\\"name\\";s:10:\\"emailField\\";s:4:\\"desc\\";s:29:\\"prop_register.emailfield_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:5:\\"email\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:10:\\"successMsg\\";a:7:{s:4:\\"name\\";s:10:\\"successMsg\\";s:4:\\"desc\\";s:29:\\"prop_register.successmsg_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:13:\\"persistParams\\";a:7:{s:4:\\"name\\";s:13:\\"persistParams\\";s:4:\\"desc\\";s:32:\\"prop_register.persistparams_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:8:\\"preHooks\\";a:7:{s:4:\\"name\\";s:8:\\"preHooks\\";s:4:\\"desc\\";s:27:\\"prop_register.prehooks_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:9:\\"postHooks\\";a:7:{s:4:\\"name\\";s:9:\\"postHooks\\";s:4:\\"desc\\";s:28:\\"prop_register.posthooks_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:11:\\"useExtended\\";a:7:{s:4:\\"name\\";s:11:\\"useExtended\\";s:4:\\"desc\\";s:30:\\"prop_register.useextended_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:15:\\"excludeExtended\\";a:7:{s:4:\\"name\\";s:15:\\"excludeExtended\\";s:4:\\"desc\\";s:34:\\"prop_register.excludeextended_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:10:\\"activation\\";a:7:{s:4:\\"name\\";s:10:\\"activation\\";s:4:\\"desc\\";s:29:\\"prop_register.activation_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:13:\\"activationttl\\";a:7:{s:4:\\"name\\";s:13:\\"activationttl\\";s:4:\\"desc\\";s:32:\\"prop_register.activationttl_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:3:\\"180\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:20:\\"activationResourceId\\";a:7:{s:4:\\"name\\";s:20:\\"activationResourceId\\";s:4:\\"desc\\";s:39:\\"prop_register.activationresourceid_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";i:1;s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:15:\\"activationEmail\\";a:7:{s:4:\\"name\\";s:15:\\"activationEmail\\";s:4:\\"desc\\";s:34:\\"prop_register.activationemail_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:22:\\"activationEmailSubject\\";a:7:{s:4:\\"name\\";s:22:\\"activationEmailSubject\\";s:4:\\"desc\\";s:41:\\"prop_register.activationemailsubject_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:22:\\"activationEmailTplType\\";a:7:{s:4:\\"name\\";s:22:\\"activationEmailTplType\\";s:4:\\"desc\\";s:41:\\"prop_register.activationemailtpltype_desc\\";s:4:\\"type\\";s:4:\\"list\\";s:7:\\"options\\";a:4:{i:0;a:2:{s:5:\\"value\\";s:8:\\"modChunk\\";s:4:\\"text\\";s:18:\\"opt_register.chunk\\";}i:1;a:2:{s:5:\\"value\\";s:4:\\"file\\";s:4:\\"text\\";s:17:\\"opt_register.file\\";}i:2;a:2:{s:5:\\"value\\";s:6:\\"inline\\";s:4:\\"text\\";s:19:\\"opt_register.inline\\";}i:3;a:2:{s:5:\\"value\\";s:8:\\"embedded\\";s:4:\\"text\\";s:21:\\"opt_register.embedded\\";}}s:5:\\"value\\";s:8:\\"modChunk\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:18:\\"activationEmailTpl\\";a:7:{s:4:\\"name\\";s:18:\\"activationEmailTpl\\";s:4:\\"desc\\";s:37:\\"prop_register.activationemailtpl_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:19:\\"lgnActivateEmailTpl\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:21:\\"activationEmailTplAlt\\";a:7:{s:4:\\"name\\";s:21:\\"activationEmailTplAlt\\";s:4:\\"desc\\";s:40:\\"prop_register.activationemailtplalt_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:19:\\"moderatedResourceId\\";a:7:{s:4:\\"name\\";s:19:\\"moderatedResourceId\\";s:4:\\"desc\\";s:38:\\"prop_register.moderatedresourceid_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:26:\\"removeExpiredRegistrations\\";a:7:{s:4:\\"name\\";s:26:\\"removeExpiredRegistrations\\";s:4:\\"desc\\";s:45:\\"prop_register.removeexpiredregistrations_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:17:\\"placeholderPrefix\\";a:7:{s:4:\\"name\\";s:17:\\"placeholderPrefix\\";s:4:\\"desc\\";s:36:\\"prop_register.placeholderprefix_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:14:\\"recaptchaTheme\\";a:7:{s:4:\\"name\\";s:14:\\"recaptchaTheme\\";s:4:\\"desc\\";s:33:\\"prop_register.recaptchatheme_desc\\";s:4:\\"type\\";s:4:\\"list\\";s:7:\\"options\\";a:4:{i:0;a:2:{s:4:\\"text\\";s:16:\\"opt_register.red\\";s:5:\\"value\\";s:3:\\"red\\";}i:1;a:2:{s:4:\\"text\\";s:18:\\"opt_register.white\\";s:5:\\"value\\";s:5:\\"white\\";}i:2;a:2:{s:4:\\"text\\";s:18:\\"opt_register.clean\\";s:5:\\"value\\";s:5:\\"clean\\";}i:3;a:2:{s:4:\\"text\\";s:23:\\"opt_register.blackglass\\";s:5:\\"value\\";s:10:\\"blackglass\\";}}s:5:\\"value\\";s:5:\\"clean\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:12:\\"mathMinRange\\";a:7:{s:4:\\"name\\";s:12:\\"mathMinRange\\";s:4:\\"desc\\";s:31:\\"prop_register.mathminrange_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";i:10;s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:12:\\"mathMaxRange\\";a:7:{s:4:\\"name\\";s:12:\\"mathMaxRange\\";s:4:\\"desc\\";s:31:\\"prop_register.mathmaxrange_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";i:100;s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:9:\\"mathField\\";a:7:{s:4:\\"name\\";s:9:\\"mathField\\";s:4:\\"desc\\";s:28:\\"prop_register.mathfield_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:4:\\"math\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:12:\\"mathOp1Field\\";a:7:{s:4:\\"name\\";s:12:\\"mathOp1Field\\";s:4:\\"desc\\";s:31:\\"prop_register.mathop1field_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:3:\\"op1\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:12:\\"mathOp2Field\\";a:7:{s:4:\\"name\\";s:12:\\"mathOp2Field\\";s:4:\\"desc\\";s:31:\\"prop_register.mathop2field_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:3:\\"op2\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:17:\\"mathOperatorField\\";a:7:{s:4:\\"name\\";s:17:\\"mathOperatorField\\";s:4:\\"desc\\";s:36:\\"prop_register.mathoperatorfield_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:8:\\"operator\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}}\', \'\', \'0\', \'\')',
      9 => 'INSERT INTO `[[++table_prefix]]site_snippets` (`id`, `source`, `property_preprocess`, `name`, `description`, `editor_type`, `category`, `cache_type`, `snippet`, `locked`, `properties`, `moduleguid`, `static`, `static_file`) VALUES (\'30\', \'0\', \'0\', \'ConfirmRegister\', \'Handles activation of registered user.\', \'0\', \'16\', \'0\', \'/**\\n * Register\\n *\\n * Copyright 2010 by Shaun McCormick <shaun@modx.com>\\n *\\n * Register is free software; you can redistribute it and/or modify it under the\\n * terms of the GNU General Public License as published by the Free Software\\n * Foundation; either version 2 of the License, or (at your option) any later\\n * version.\\n *\\n * Register is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * Register; if not, write to the Free Software Foundation, Inc., 59 Temple\\n * Place, Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package login\\n */\\n/**\\n * MODx Confirm Register Activation Snippet. Snippet to place on an activation\\n * page that the user using the Register snippet would be sent to via the\\n * activation email.\\n *\\n * @var modX $modx\\n * @var Login $login\\n * @var array $scriptProperties\\n *\\n * @package login\\n */\\nrequire_once $modx->getOption(\\\'login.core_path\\\',null,$modx->getOption(\\\'core_path\\\').\\\'components/login/\\\').\\\'model/login/login.class.php\\\';\\n$login = new Login($modx,$scriptProperties);\\n\\n$controller = $login->loadController(\\\'ConfirmRegister\\\');\\n$output = $controller->run($scriptProperties);\\nreturn $output;\', \'0\', \'a:5:{s:10:\\"redirectTo\\";a:7:{s:4:\\"name\\";s:10:\\"redirectTo\\";s:4:\\"desc\\";s:36:\\"prop_confirmregister.redirectto_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:14:\\"redirectParams\\";a:7:{s:4:\\"name\\";s:14:\\"redirectParams\\";s:4:\\"desc\\";s:40:\\"prop_confirmregister.redirectparams_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:12:\\"authenticate\\";a:7:{s:4:\\"name\\";s:12:\\"authenticate\\";s:4:\\"desc\\";s:38:\\"prop_confirmregister.authenticate_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:20:\\"authenticateContexts\\";a:7:{s:4:\\"name\\";s:20:\\"authenticateContexts\\";s:4:\\"desc\\";s:46:\\"prop_confirmregister.authenticatecontexts_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:9:\\"errorPage\\";a:7:{s:4:\\"name\\";s:9:\\"errorPage\\";s:4:\\"desc\\";s:35:\\"prop_confirmregister.errorpage_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}}\', \'\', \'0\', \'\')',
      10 => 'INSERT INTO `[[++table_prefix]]site_snippets` (`id`, `source`, `property_preprocess`, `name`, `description`, `editor_type`, `category`, `cache_type`, `snippet`, `locked`, `properties`, `moduleguid`, `static`, `static_file`) VALUES (\'31\', \'0\', \'0\', \'UpdateProfile\', \'Allows front-end updating of a users own profile.\', \'0\', \'16\', \'0\', \'/**\\n * Login\\n *\\n * Copyright 2010-2012 by Shaun McCormick <shaun+login@modx.com>\\n *\\n * Login is free software; you can redistribute it and/or modify it under the\\n * terms of the GNU General Public License as published by the Free Software\\n * Foundation; either version 2 of the License, or (at your option) any later\\n * version.\\n *\\n * Login is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * Login; if not, write to the Free Software Foundation, Inc., 59 Temple\\n * Place, Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package login\\n */\\n/**\\n * MODx UpdateProfile Snippet. Handles updating of User Profiles.\\n *\\n * @var modX $modx\\n * @var Login $login\\n * @var array $scriptProperties\\n * \\n * @package login\\n */\\nrequire_once $modx->getOption(\\\'login.core_path\\\',null,$modx->getOption(\\\'core_path\\\').\\\'components/login/\\\').\\\'model/login/login.class.php\\\';\\n$login = new Login($modx,$scriptProperties);\\n\\n$controller = $login->loadController(\\\'UpdateProfile\\\');\\nreturn $controller->run($scriptProperties);\', \'0\', \'a:13:{s:9:\\"submitVar\\";a:7:{s:4:\\"name\\";s:9:\\"submitVar\\";s:4:\\"desc\\";s:33:\\"prop_updateprofile.submitvar_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:4:\\"user\\";a:7:{s:4:\\"name\\";s:4:\\"user\\";s:4:\\"desc\\";s:28:\\"prop_updateprofile.user_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:15:\\"redirectToLogin\\";a:7:{s:4:\\"name\\";s:15:\\"redirectToLogin\\";s:4:\\"desc\\";s:39:\\"prop_updateprofile.redirecttologin_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:15:\\"reloadOnSuccess\\";a:7:{s:4:\\"name\\";s:15:\\"reloadOnSuccess\\";s:4:\\"desc\\";s:39:\\"prop_updateprofile.reloadonsuccess_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:12:\\"syncUsername\\";a:7:{s:4:\\"name\\";s:12:\\"syncUsername\\";s:4:\\"desc\\";s:36:\\"prop_updateprofile.syncusername_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:10:\\"emailField\\";a:7:{s:4:\\"name\\";s:10:\\"emailField\\";s:4:\\"desc\\";s:34:\\"prop_updateprofile.emailfield_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:5:\\"email\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:11:\\"useExtended\\";a:7:{s:4:\\"name\\";s:11:\\"useExtended\\";s:4:\\"desc\\";s:35:\\"prop_updateprofile.useextended_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:15:\\"excludeExtended\\";a:7:{s:4:\\"name\\";s:15:\\"excludeExtended\\";s:4:\\"desc\\";s:39:\\"prop_updateprofile.excludeextended_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:13:\\"allowedFields\\";a:7:{s:4:\\"name\\";s:13:\\"allowedFields\\";s:4:\\"desc\\";s:37:\\"prop_updateprofile.allowedfields_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:21:\\"allowedExtendedFields\\";a:7:{s:4:\\"name\\";s:21:\\"allowedExtendedFields\\";s:4:\\"desc\\";s:45:\\"prop_updateprofile.allowedextendedfields_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:8:\\"preHooks\\";a:7:{s:4:\\"name\\";s:8:\\"preHooks\\";s:4:\\"desc\\";s:32:\\"prop_updateprofile.prehooks_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:9:\\"postHooks\\";a:7:{s:4:\\"name\\";s:9:\\"postHooks\\";s:4:\\"desc\\";s:33:\\"prop_updateprofile.posthooks_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:17:\\"placeholderPrefix\\";a:7:{s:4:\\"name\\";s:17:\\"placeholderPrefix\\";s:4:\\"desc\\";s:41:\\"prop_updateprofile.placeholderprefix_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}}\', \'\', \'0\', \'\')',
      11 => 'INSERT INTO `[[++table_prefix]]site_snippets` (`id`, `source`, `property_preprocess`, `name`, `description`, `editor_type`, `category`, `cache_type`, `snippet`, `locked`, `properties`, `moduleguid`, `static`, `static_file`) VALUES (\'32\', \'0\', \'0\', \'Profile\', \'Displays Profile data for a User.\', \'0\', \'16\', \'0\', \'/**\\n * Profile\\n *\\n * Copyright 2010 by Shaun McCormick <shaun@modx.com>\\n *\\n * Register is free software; you can redistribute it and/or modify it under the\\n * terms of the GNU General Public License as published by the Free Software\\n * Foundation; either version 2 of the License, or (at your option) any later\\n * version.\\n *\\n * Register is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * Register; if not, write to the Free Software Foundation, Inc., 59 Temple\\n * Place, Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package login\\n */\\n/**\\n * MODx Profile Snippet. Sets Profile data for a user to placeholders\\n *\\n * @package login\\n */\\nrequire_once $modx->getOption(\\\'login.core_path\\\',null,$modx->getOption(\\\'core_path\\\').\\\'components/login/\\\').\\\'model/login/login.class.php\\\';\\n$login = new Login($modx,$scriptProperties);\\n\\n$controller = $login->loadController(\\\'Profile\\\');\\nreturn $controller->run($scriptProperties);\', \'0\', \'a:3:{s:6:\\"prefix\\";a:7:{s:4:\\"name\\";s:6:\\"prefix\\";s:4:\\"desc\\";s:24:\\"prop_profile.prefix_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:4:\\"user\\";a:7:{s:4:\\"name\\";s:4:\\"user\\";s:4:\\"desc\\";s:22:\\"prop_profile.user_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:11:\\"useExtended\\";a:7:{s:4:\\"name\\";s:11:\\"useExtended\\";s:4:\\"desc\\";s:29:\\"prop_profile.useextended_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}}\', \'\', \'0\', \'\')',
      12 => 'INSERT INTO `[[++table_prefix]]site_snippets` (`id`, `source`, `property_preprocess`, `name`, `description`, `editor_type`, `category`, `cache_type`, `snippet`, `locked`, `properties`, `moduleguid`, `static`, `static_file`) VALUES (\'33\', \'0\', \'0\', \'ChangePassword\', \'Processes a form for changing the password for a User.\', \'0\', \'16\', \'0\', \'/**\\n * Login\\n *\\n * Copyright 2010 by Shaun McCormick <shaun+login@modx.com>\\n *\\n * Login is free software; you can redistribute it and/or modify it under the\\n * terms of the GNU General Public License as published by the Free Software\\n * Foundation; either version 2 of the License, or (at your option) any later\\n * version.\\n *\\n * Login is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * Login; if not, write to the Free Software Foundation, Inc., 59 Temple\\n * Place, Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package login\\n */\\n/**\\n * ChangePassword snippet\\n *\\n * @var modX $modx\\n * @var Login $login\\n * @var array $scriptProperties\\n * \\n * @package login\\n **/\\nrequire_once $modx->getOption(\\\'login.core_path\\\',null,$modx->getOption(\\\'core_path\\\').\\\'components/login/\\\').\\\'model/login/login.class.php\\\';\\n$login = new Login($modx,$scriptProperties);\\n\\n$controller = $login->loadController(\\\'ChangePassword\\\');\\n$output = $controller->run($scriptProperties);\\nreturn $output;\', \'0\', \'a:10:{s:9:\\"submitVar\\";a:7:{s:4:\\"name\\";s:9:\\"submitVar\\";s:4:\\"desc\\";s:34:\\"prop_changepassword.submitvar_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:12:\\"logcp-submit\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:16:\\"fieldOldPassword\\";a:7:{s:4:\\"name\\";s:16:\\"fieldOldPassword\\";s:4:\\"desc\\";s:41:\\"prop_changepassword.fieldoldpassword_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:12:\\"password_old\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:16:\\"fieldNewPassword\\";a:7:{s:4:\\"name\\";s:16:\\"fieldNewPassword\\";s:4:\\"desc\\";s:41:\\"prop_changepassword.fieldnewpassword_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:12:\\"password_new\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:23:\\"fieldConfirmNewPassword\\";a:7:{s:4:\\"name\\";s:23:\\"fieldConfirmNewPassword\\";s:4:\\"desc\\";s:48:\\"prop_changepassword.fieldconfirmnewpassword_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:20:\\"password_new_confirm\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:8:\\"preHooks\\";a:7:{s:4:\\"name\\";s:8:\\"preHooks\\";s:4:\\"desc\\";s:33:\\"prop_changepassword.prehooks_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:9:\\"postHooks\\";a:7:{s:4:\\"name\\";s:9:\\"postHooks\\";s:4:\\"desc\\";s:34:\\"prop_changepassword.posthooks_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:15:\\"redirectToLogin\\";a:7:{s:4:\\"name\\";s:15:\\"redirectToLogin\\";s:4:\\"desc\\";s:40:\\"prop_changepassword.redirecttologin_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:15:\\"reloadOnSuccess\\";a:7:{s:4:\\"name\\";s:15:\\"reloadOnSuccess\\";s:4:\\"desc\\";s:40:\\"prop_changepassword.reloadonsuccess_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:14:\\"successMessage\\";a:7:{s:4:\\"name\\";s:14:\\"successMessage\\";s:4:\\"desc\\";s:39:\\"prop_changepassword.successmessage_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:17:\\"placeholderPrefix\\";a:7:{s:4:\\"name\\";s:17:\\"placeholderPrefix\\";s:4:\\"desc\\";s:42:\\"prop_changepassword.placeholderprefix_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:6:\\"logcp.\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}}\', \'\', \'0\', \'\')',
      13 => 'INSERT INTO `[[++table_prefix]]site_snippets` (`id`, `source`, `property_preprocess`, `name`, `description`, `editor_type`, `category`, `cache_type`, `snippet`, `locked`, `properties`, `moduleguid`, `static`, `static_file`) VALUES (\'34\', \'0\', \'0\', \'isLoggedIn\', \'Checks to see if the user is logged in. If not, redirects to Unauthorized Page.\', \'0\', \'16\', \'0\', \'/**\\n * isLoggedIn\\n *\\n * Copyright 2009-2011 by Shaun McCormick <shaun@modx.com>\\n *\\n * isLoggedIn is free software; you can redistribute it and/or modify it under the\\n * terms of the GNU General Public License as published by the Free Software\\n * Foundation; either version 2 of the License, or (at your option) any later\\n * version.\\n *\\n * isLoggedIn is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * isLoggedIn; if not, write to the Free Software Foundation, Inc., 59 Temple\\n * Place, Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package login\\n */\\n/**\\n * MODx isLoggedIn Snippet. Will check to see if user is logged into the current\\n * or specific context. If not, redirects to unauthorized page.\\n *\\n * @package login\\n */\\n/* setup default properties */\\n$ctxs = !empty($ctxs) ? $ctxs : $modx->context->get(\\\'key\\\');\\nif (!is_array($ctxs)) $ctxs = explode(\\\',\\\',$ctxs);\\n\\nif (!$modx->user->hasSessionContext($ctxs)) {\\n    if (!empty($redirectTo)) {\\n        $redirectParams = !empty($redirectParams) ? $modx->fromJSON($redirectParams) : \\\'\\\';\\n        $url = $modx->makeUrl($redirectTo,\\\'\\\',$redirectParams,\\\'full\\\');\\n        $modx->sendRedirect($url);\\n    } else {\\n        $modx->sendUnauthorizedPage();\\n    }\\n}\\nreturn \\\'\\\';\', \'0\', \'a:3:{s:8:\\"contexts\\";a:7:{s:4:\\"name\\";s:8:\\"contexts\\";s:4:\\"desc\\";s:29:\\"prop_isloggedin.contexts_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:10:\\"redirectto\\";a:7:{s:4:\\"name\\";s:10:\\"redirectto\\";s:4:\\"desc\\";s:31:\\"prop_isloggedin.redirectto_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:14:\\"redirectparams\\";a:7:{s:4:\\"name\\";s:14:\\"redirectparams\\";s:4:\\"desc\\";s:35:\\"prop_isloggedin.redirectparams_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}}\', \'\', \'0\', \'\')',
      14 => 'INSERT INTO `[[++table_prefix]]site_snippets` (`id`, `source`, `property_preprocess`, `name`, `description`, `editor_type`, `category`, `cache_type`, `snippet`, `locked`, `properties`, `moduleguid`, `static`, `static_file`) VALUES (\'35\', \'0\', \'0\', \'ActiveUsers\', \'Shows a list of active, logged-in users.\', \'0\', \'16\', \'0\', \'/**\\n * Login\\n *\\n * Copyright 2010 by Shaun McCormick <shaun+login@modx.com>\\n *\\n * Login is free software; you can redistribute it and/or modify it under the\\n * terms of the GNU General Public License as published by the Free Software\\n * Foundation; either version 2 of the License, or (at your option) any later\\n * version.\\n *\\n * Login is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * Login; if not, write to the Free Software Foundation, Inc., 59 Temple\\n * Place, Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package login\\n */\\n/**\\n * Shows a list of active, signed-on users\\n *\\n * @var modX $modx\\n * @var Login $login\\n * @var array $scriptProperties\\n *\\n * @package login\\n **/\\nrequire_once $modx->getOption(\\\'login.core_path\\\',null,$modx->getOption(\\\'core_path\\\').\\\'components/login/\\\').\\\'model/login/login.class.php\\\';\\n$login = new Login($modx,$scriptProperties);\\n\\n$controller = $login->loadController(\\\'ActiveUsers\\\');\\n$output = $controller->run($scriptProperties);\\nreturn $output;\', \'0\', \'a:9:{s:3:\\"tpl\\";a:7:{s:4:\\"name\\";s:3:\\"tpl\\";s:4:\\"desc\\";s:25:\\"prop_activeusers.tpl_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:13:\\"lgnActiveUser\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:7:\\"tplType\\";a:7:{s:4:\\"name\\";s:7:\\"tplType\\";s:4:\\"desc\\";s:29:\\"prop_activeusers.tpltype_desc\\";s:4:\\"type\\";s:4:\\"list\\";s:7:\\"options\\";a:4:{i:0;a:2:{s:5:\\"value\\";s:8:\\"modChunk\\";s:4:\\"text\\";s:18:\\"opt_register.chunk\\";}i:1;a:2:{s:5:\\"value\\";s:4:\\"file\\";s:4:\\"text\\";s:17:\\"opt_register.file\\";}i:2;a:2:{s:5:\\"value\\";s:6:\\"inline\\";s:4:\\"text\\";s:19:\\"opt_register.inline\\";}i:3;a:2:{s:5:\\"value\\";s:8:\\"embedded\\";s:4:\\"text\\";s:21:\\"opt_register.embedded\\";}}s:5:\\"value\\";s:8:\\"modChunk\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:6:\\"sortBy\\";a:7:{s:4:\\"name\\";s:6:\\"sortBy\\";s:4:\\"desc\\";s:28:\\"prop_activeusers.sortby_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:8:\\"username\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:7:\\"sortDir\\";a:7:{s:4:\\"name\\";s:7:\\"sortDir\\";s:4:\\"desc\\";s:29:\\"prop_activeusers.sortdir_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:2:{i:0;a:2:{s:5:\\"value\\";s:3:\\"ASC\\";s:4:\\"text\\";s:16:\\"opt_register.asc\\";}i:1;a:2:{s:5:\\"value\\";s:4:\\"DESC\\";s:4:\\"text\\";s:17:\\"opt_register.desc\\";}}s:5:\\"value\\";s:4:\\"DESC\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:5:\\"limit\\";a:7:{s:4:\\"name\\";s:5:\\"limit\\";s:4:\\"desc\\";s:27:\\"prop_activeusers.limit_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";i:10;s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:6:\\"offset\\";a:7:{s:4:\\"name\\";s:6:\\"offset\\";s:4:\\"desc\\";s:28:\\"prop_activeusers.offset_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";i:0;s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:8:\\"classKey\\";a:7:{s:4:\\"name\\";s:8:\\"classKey\\";s:4:\\"desc\\";s:30:\\"prop_activeusers.classkey_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:7:\\"modUser\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:17:\\"placeholderPrefix\\";a:7:{s:4:\\"name\\";s:17:\\"placeholderPrefix\\";s:4:\\"desc\\";s:39:\\"prop_activeusers.placeholderprefix_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:3:\\"au.\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:13:\\"toPlaceholder\\";a:7:{s:4:\\"name\\";s:13:\\"toPlaceholder\\";s:4:\\"desc\\";s:35:\\"prop_activeusers.toplaceholder_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:16:\\"login:properties\\";s:4:\\"area\\";s:0:\\"\\";}}\', \'\', \'0\', \'\')',
      15 => 'INSERT INTO `[[++table_prefix]]site_snippets` (`id`, `source`, `property_preprocess`, `name`, `description`, `editor_type`, `category`, `cache_type`, `snippet`, `locked`, `properties`, `moduleguid`, `static`, `static_file`) VALUES (\'36\', \'1\', \'0\', \'MetaX\', \'Automatically generates Meta tags for your pages, along with a base and a couple link tags.\', \'0\', \'17\', \'0\', \'/*\\r\\n	MetaX (Meta Tags Extended) for Revolution\\r\\n	Version: 2.0.2\\r\\n	Author: Salvatore Sodano - http://salscode.com\\r\\n	Other Contributors:\\r\\n		Mike Stop Continues - http://mikestopcontinues.com\\r\\n		Jakob Class - http://www.class-zec.de <jakob.class@class-zec.de>\\r\\n		Stefan Rochlitzer - icebear-solutions.com <Stefan.Rochlitzer@icebear-solutions.com>\\r\\n	Support Page: http://salscode.com/index.php?id=93\\r\\n\\r\\n	Description: Automatically generates Meta tags for your pages, along with a base and a couple link tags.\\r\\n	For a full description visit http://rtfm.modx.com/extras/revo/metax.\\r\\n\\r\\n	MODx Versions:\\r\\n	Evolution - This is the Revo version, visit http://modx.com/extras/package/metax-evo for Evo.\\r\\n	Revolution - All versions, tested up to 2.3.\\r\\n\\r\\n	Parameters:\\r\\n	http://rtfm.modx.com/extras/revo/metax\\r\\n*/\\r\\n/**********Variables***********/\\r\\n$configs = $modx->getConfig();\\r\\n$sitename = trim($configs[\\\'site_name\\\']);\\r\\n$sitestart = trim($configs[\\\'site_start\\\']);\\r\\n \\r\\n//HTML\\r\\n$html = empty($html) ? 0 : $html;\\r\\n$html5 = empty($html5) ? 0 : $html5;\\r\\n \\r\\n//Favicon Relative Path - Default is set to the site root, shown below.\\r\\n//If the code for your favicon does not display, then the below path may be incorrect.\\r\\n$favicon = empty($favicon) ? \\\'favicon.ico\\\' : $favicon;\\r\\n$mobile = empty($mobile) ? \\\'mobile.png\\\' : $mobile;\\r\\n\\r\\n//Copyrighted until - Blank defaults to current year.\\r\\n$copytill = empty($copytill) ? \\\'\\\' : $copytill;\\r\\n\\r\\n//Copyrighted since - Blank omits this from view.\\r\\n$copyfrom = empty($copyfrom) ? \\\'\\\' : $copyfrom;\\r\\n\\r\\n//RSS & CSS\\r\\n$rss = empty($rss) ? \\\'\\\' : $rss;\\r\\n$css = empty($css) ? \\\'\\\' : $css;\\r\\n\\r\\n$id = $modx->resource->get(\\\'id\\\');\\r\\n$siteurl = $configs[\\\'site_url\\\'];\\r\\n\\r\\n/*----------End Variables----------*/\\r\\n\\r\\nif($html5 == 1) {$html = 2;}\\r\\nswitch ($html)\\r\\n{\\r\\n	default:\\r\\n	case 0:\\r\\n		$tagend = \\" />\\";\\r\\n		$tpl = empty($tpl) ? \\\'metax-xhtml4\\\' : $tpl;\\r\\n		break;\\r\\n	case 1:\\r\\n		$tagend = \\" >\\";\\r\\n		$tpl = empty($tpl) ? \\\'metax-html4\\\' : $tpl;\\r\\n		break;\\r\\n	case 2:\\r\\n		$tagend = \\" />\\";\\r\\n		$tpl = empty($tpl) ? \\\'metax-html5\\\' : $tpl;\\r\\n		break;\\r\\n}\\r\\n/*--------------------*/\\r\\n\\r\\n/**Robots**/\\r\\n$tmp = $modx->resource->get(\\\'searchable\\\');\\r\\nif ($tmp == 1) {$output[\\"metax.robots\\"] = \\"index, follow\\";}\\r\\nelse {$output[\\"metax.robots\\"] = \\"noindex, nofollow\\";}\\r\\n/*--------------------*/\\r\\n\\r\\n/**Creator/Editor**/\\r\\n$created = $modx->resource->get(\\\'createdby\\\');\\r\\nif ($created != \\\'\\\')\\r\\n{\\r\\n	$user = $modx->getObject(\\"modUser\\", $created);\\r\\n	if($user != NULL) {$output[\\"metax.createdby\\"] = $user->getOne(\\"Profile\\")->get(\\"fullname\\");}\\r\\n	else {$output[\\"metax.createdby\\"] = $sitename;}\\r\\n}\\r\\n$edited = $modx->resource->get(\\\'editedby\\\');\\r\\nif ($edited != \\\'\\\')\\r\\n{\\r\\n	$user = $modx->getObject(\\"modUser\\", $edited);\\r\\n	if($user != NULL) {$output[\\"metax.editedby\\"] = $user->getOne(\\"Profile\\")->get(\\"fullname\\");}\\r\\n	else {$output[\\"metax.editedby\\"] = $sitename;}\\r\\n}\\r\\n/*--------------------*/\\r\\n\\r\\n/**Copyright**/\\r\\nif ($copyfrom != \\\'\\\' && $copytill != \\\'\\\' && $copyfrom != $copytill) {$copyyears = $copyfrom.\\" - \\".$copytill;}\\r\\nelseif (($copyfrom == \\\'\\\' && $copytill != \\\'\\\') || ($copytill != \\\'\\\' && $copytill == $copyfrom)) {$copyyears = $copytill;}\\r\\nelseif ($copyfrom != \\\'\\\' && $copytill == \\\'\\\') {$copyyears = $copyfrom.\\" - \\".date(\\\'Y\\\');}\\r\\nelseif ($copyfrom == \\\'\\\' && $copytill == \\\'\\\') {$copyyears = date(\\\'Y\\\');}\\r\\n$output[\\"metax.copyyears\\"] = $copyyears;\\r\\n/*--------------------*/\\r\\n\\r\\n/**Pragma & Cache-Control**/\\r\\n$pragma = $modx->resource->get(\\\'cacheable\\\');\\r\\nif ($pragma == 1)\\r\\n{\\r\\n	if($html5 != 1) {$output[\\"metax.cache\\"] = \\"cache\\";}\\r\\n	else {$output[\\"metax.cache\\"] = \\"public\\";}\\r\\n}\\r\\nelse {$output[\\"metax.cache\\"] = \\"no-cache\\";}\\r\\n\\r\\n/**Canonical Link**/\\r\\nif (!isset($urlExtension))\\r\\n{\\r\\n	$urlExtension = \\\'\\\';\\r\\n}\\r\\n\\r\\nif ($id == $sitestart) {$output[\\"metax.canonical\\"] = $siteurl.$urlExtension;}\\r\\nelse\\r\\n{\\r\\n	$urlExtension = \\\'\\\';\\r\\n	try\\r\\n	{\\r\\n		if($modx->getObject(\\\'modSnippet\\\', array(\\\'name\\\' => \\\'Archivist\\\')) != NULL)\\r\\n		{\\r\\n			/* Support for FURLs created by Archivist: append year and month to canonical url */\\r\\n			$archivistFilterPrefix = $modx->getOption(\\\'archivistFilterPrefix\\\',$scriptProperties,\\\'arc_\\\');\\r\\n			$archivist = $modx->getService(\\\'archivist\\\',\\\'Archivist\\\',$modx->getOption(\\\'archivist.core_path\\\',null,$modx->getOption(\\\'core_path\\\').\\\'components/archivist/\\\').\\\'model/archivist/\\\',array(\\\'filterPrefix\\\' => $archivistFilterPrefix));\\r\\n			if (($archivist instanceof Archivist))\\r\\n			{\\r\\n				// Archivist is installed...\\r\\n				$year = $modx->getOption($archivistFilterPrefix.\\\'year\\\',$_REQUEST,$modx->getOption(\\\'year\\\',$scriptProperties,\\\'\\\'));\\r\\n				$year = (int)$archivist->sanitize($year);\\r\\n				if(!empty($year)) {$urlExtension = $year;}\\r\\n				$month = $modx->getOption($archivistFilterPrefix.\\\'month\\\',$_REQUEST,$modx->getOption(\\\'month\\\',$scriptProperties,\\\'\\\'));\\r\\n				$month = (int)$archivist->sanitize($month);\\r\\n				if (!empty($month))\\r\\n				{\\r\\n					if (strlen($month) == 1) $month = \\\'0\\\'.$month;\\r\\n					$urlExtension .= \\\'/\\\'.$month;\\r\\n				}\\r\\n			}\\r\\n		}\\r\\n	}\\r\\n	catch (Exception $e) {/*No Archivist, do nothing.*/}\\r\\n	$output[\\"metax.canonical\\"] = $modx->makeUrl($id, \\\'\\\', \\\'\\\', \\\'full\\\').$urlExtension;\\r\\n}\\r\\n/*--------------------*/\\r\\n\\r\\n/**Favicon**/\\r\\nif (is_file($favicon)) {$favicon = $siteurl.$favicon;}\\r\\nelse {$favicon = \\\'\\\';}\\r\\n$output[\\"metax.favicon\\"] = $favicon;\\r\\n\\r\\n/**Mobile icon**/\\r\\nif (is_file($mobile)) {$mobile = $siteurl.$mobile;}\\r\\nelse {$mobile = \\\'\\\';}\\r\\n$output[\\"metax.mobile\\"] = $mobile;\\r\\n/*--------------------*/\\r\\n\\r\\n/**RSS Feed**/\\r\\n$rss = explode(\\",\\", $rss);\\r\\n$count = count($rss);\\r\\n$i = 0;\\r\\n$output[\\"metax.rss\\"] = \\"\\";\\r\\nwhile ($i < $count)\\r\\n{\\r\\n	$rss[$i] = trim($rss[$i]);\\r\\n	$tmpdoc = $modx->getObject(\\\'modResource\\\',array(\\\'id\\\' => $rss[$i]));\\r\\n	if ($tmpdoc != NULL)\\r\\n	{\\r\\n		$output[\\"metax.rss\\"] .= \\"<link href=\\\\\\"\\".$modx->makeUrl($rss[$i], \\\'\\\', \\\'\\\', \\\'full\\\').\\"\\\\\\" rel=\\\\\\"alternate\\\\\\" type=\\\\\\"application/rss+xml\\\\\\" title=\\\\\\"\\".$tmpdoc->get(\\\'pagetitle\\\').\\"\\\\\\"\\".$tagend;\\r\\n	}\\r\\n	$i++;\\r\\n	if($i < $count) {$output[\\"metax.rss\\"] .= \\"\\\\n\\";}\\r\\n}\\r\\n/*--------------------*/\\r\\n\\r\\n/**CSS Links**/\\r\\n$css = explode(\\",\\", $css);\\r\\n$count = count($css);\\r\\n$i = 0;\\r\\nwhile ($i < $count)\\r\\n{\\r\\n	$temp = $css[$i];\\r\\n	$temp = explode(\\":\\", $temp);\\r\\n	$countt = count($temp);\\r\\n	$temp[0] = trim($temp[0]);\\r\\n	if (is_file($temp[0]))\\r\\n	{\\r\\n		if ($countt == 1) {$output[\\"metax.css\\"] .= \\"<link rel=\\\\\\"stylesheet\\\\\\" href=\\\\\\"\\".$temp[0].\\"\\\\\\" type=\\\\\\"text/css\\\\\\"\\".$tagend;}\\r\\n		else\\r\\n		{\\r\\n			$temp[1] = trim($temp[1]);\\r\\n			$output[\\"metax.css\\"] .= \\"<!--[if \\".$temp[1].\\"]><link rel=\\\\\\"stylesheet\\\\\\" href=\\\\\\"\\".$temp[0].\\"\\\\\\" type=\\\\\\"text/css\\\\\\"\\".$tagend.\\"<![endif]-->\\";\\r\\n		}\\r\\n	}\\r\\n	$i++;\\r\\n	if($i < $count) {$output[\\"metax.css\\"] .= \\"\\\\n\\";}\\r\\n}\\r\\n/*--------------------*/\\r\\n\\r\\nreturn $modx->getChunk($tpl, $output);\', \'0\', \'a:0:{}\', \'\', \'0\', \'\')',
      16 => 'INSERT INTO `[[++table_prefix]]site_snippets` (`id`, `source`, `property_preprocess`, `name`, `description`, `editor_type`, `category`, `cache_type`, `snippet`, `locked`, `properties`, `moduleguid`, `static`, `static_file`) VALUES (\'43\', \'0\', \'0\', \'phpthumbof\', \'Identical to pthumb. Retained for backwards compatibility.\\nDocumentation: https://github.com/oo12/phpThumbOf\', \'0\', \'30\', \'0\', \'/**\\n * pThumb\\n * Copyright 2013-2014 Jason Grant\\n *\\n * Please see the GitHub page for documentation or to report bugs:\\n * https://github.com/oo12/phpThumbOf\\n *\\n * Forked from phpThumbOf 1.4.0\\n * Copyright 2009-2012 by Shaun McCormick <shaun@modx.com>\\n *\\n * pThumb is free software; you can redistribute it and/or modify it\\n * under the terms of the GNU General Public License as published by the Free\\n * Software Foundation; either version 2 of the License, or (at your option) any\\n * later version.\\n *\\n * pThumb is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * phpThumbOf; if not, write to the Free Software Foundation, Inc., 59 Temple\\n * Place, Suite 330, Boston, MA 02111-1307 USA\\n *\\n */\\n/**\\n *\\n * @var modX $modx\\n * @var array $scriptProperties\\n * @var string $input\\n * @var string|array $options\\n *\\n */\\n\\nif (empty($input)) {  // Exit quietly if no file name given\\n	return;\\n}\\n\\n$scriptProperties[\\\'debug\\\'] = isset($debug) ? $debug : false;\\n\\n\\nstatic $pt_settings = array();\\n\\nif (empty($pt_settings)) {\\n	if (!$modx->loadClass(\\\'phpThumbOf\\\', MODX_CORE_PATH . \\\'components/phpthumbof/model/\\\', true, true)) {\\n		$modx->log(modX::LOG_LEVEL_ERROR, \\\'[pThumb] Could not load phpThumbOf class.\\\');\\n		return $input;\\n	}\\n}\\n\\n$pThumb = new phpThumbOf($modx, $pt_settings, $scriptProperties);\\n\\n$result = $pThumb->createThumbnail($input, $options);\\n\\nif (!empty($toPlaceholder) || $result[\\\'outputDims\\\']) {\\n	if ($result[\\\'width\\\'] === \\\'\\\' && $result[\\\'file\\\'] && $dims = getimagesize($result[\\\'file\\\']) ) {\\n			$result[\\\'width\\\'] = $dims[0];\\n			$result[\\\'height\\\'] = $dims[1];\\n	}\\n	if (!empty($toPlaceholder)) {\\n		$modx->setPlaceholders(array(\\n			$toPlaceholder => $result[\\\'src\\\'],\\n			\\"$toPlaceholder.width\\" => $result[\\\'width\\\'],\\n			\\"$toPlaceholder.height\\" => $result[\\\'height\\\']\\n		));\\n		$output = \\\'\\\';\\n	}\\n	if ($result[\\\'outputDims\\\']) {\\n		$output = \\"src=\\\\\\"{$result[\\\'src\\\']}\\\\\\"\\" . ($result[\\\'width\\\'] ? \\" width=\\\\\\"{$result[\\\'width\\\']}\\\\\\" height=\\\\\\"{$result[\\\'height\\\']}\\\\\\"\\" : \\\'\\\');\\n	}\\n}\\nelse {\\n	$output = $result[\\\'src\\\'];\\n}\\n\\nif ($debug && $result[\\\'success\\\']) {  // if debugging is on and createThumbnail was successful, log the debug info\\n	$pThumb->debugmsg(isset($pThumb->phpThumb->debugmessages) ? \\\':: Processed ::\\\' : \\":: Loaded from cache: {$result[\\\'src\\\']}\\", true);\\n}\\n\\nreturn $output;\', \'0\', \'a:1:{s:5:\\"debug\\";a:7:{s:4:\\"name\\";s:5:\\"debug\\";s:4:\\"desc\\";s:22:\\"prop_pthumb.debug_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:18:\\"phpthumbof:default\\";s:4:\\"area\\";s:0:\\"\\";}}\', \'\', \'0\', \'\')',
      17 => 'INSERT INTO `[[++table_prefix]]site_snippets` (`id`, `source`, `property_preprocess`, `name`, `description`, `editor_type`, `category`, `cache_type`, `snippet`, `locked`, `properties`, `moduleguid`, `static`, `static_file`) VALUES (\'38\', \'10\', \'0\', \'getSourcePath\', \'Возвращает URL или директорию медиасурса\', \'0\', \'0\', \'0\', \'// Получаем объект\\nif(!$id OR !$source = $modx->getObject(\\\'sources.modMediaSource\\\', $id)){return \\\'\\\';};\\n// Инициализируем \\n$source->initialize(); \\n//\\n$result = $source->$callback($params);\\nunset($source);\\nreturn $result;\', \'0\', \'a:3:{s:8:\\"callback\\";a:7:{s:4:\\"name\\";s:8:\\"callback\\";s:4:\\"desc\\";s:94:\\"Имя возвращающей значение функции. getBaseUrl или getBasePath\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:10:\\"getBaseUrl\\";s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:2:\\"id\\";a:7:{s:4:\\"name\\";s:2:\\"id\\";s:4:\\"desc\\";s:49:\\"id медиасурса. Обязательное\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:2:\\"10\\";s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:6:\\"params\\";a:7:{s:4:\\"name\\";s:6:\\"params\\";s:4:\\"desc\\";s:0:\\"\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}}\', \'\', \'0\', \'\')',
      18 => 'INSERT INTO `[[++table_prefix]]site_snippets` (`id`, `source`, `property_preprocess`, `name`, `description`, `editor_type`, `category`, `cache_type`, `snippet`, `locked`, `properties`, `moduleguid`, `static`, `static_file`) VALUES (\'44\', \'0\', \'0\', \'smarty\', \'Include Smarty-template\', \'0\', \'19\', \'0\', \'foreach($scriptProperties as $key => $value){\\n    $modx->smarty->assign($key, $value);\\n}\\n\\nreturn $modx->smarty->fetch($tpl);\', \'0\', NULL, \'\', \'0\', \'\')',
      19 => 'INSERT INTO `[[++table_prefix]]site_snippets` (`id`, `source`, `property_preprocess`, `name`, `description`, `editor_type`, `category`, `cache_type`, `snippet`, `locked`, `properties`, `moduleguid`, `static`, `static_file`) VALUES (\'46\', \'10\', \'0\', \'modHybridAuth.Register\', \'\', \'0\', \'34\', \'0\', \'// Check is logged in\\n\\nif ($modx->user->hasSessionContext($modx->context->key)) {\\n    $modx->sendRedirect($modx->getOption(\\\'site_url\\\'));\\n    return;\\n}\\n\\n// else\\n\\n// Check for social profile data\\nif(!empty($_SESSION[\\\'social_profile\\\'])){\\n    \\n    // If exists, fill form placeholders from this data\\n    $profile = $_SESSION[\\\'social_profile\\\'][\\\'profile\\\'];\\n    $modx->setPlaceholder(\\"{$placeholderPrefix}username\\", $profile[\\\'displayName\\\']);\\n    \\n    $fullname = array();\\n    if($profile[\\\'firstName\\\']){\\n        $fullname[] = $profile[\\\'firstName\\\'];\\n    }\\n    if($profile[\\\'lastName\\\']){\\n        $fullname[] = $profile[\\\'lastName\\\'];\\n    }\\n    if($fullname){\\n        $modx->setPlaceholder(\\"{$placeholderPrefix}fullname\\", implode(\\" \\", $fullname));\\n    }\\n    \\n    \\n    if($profile[\\\'email\\\']){\\n        $modx->setPlaceholder(\\"{$placeholderPrefix}email\\", $profile[\\\'email\\\']);\\n    }\\n    \\n    /*print \\\'<pre>\\\';\\n    print_r($profile);\\n    print \\\'</pre>\\\';*/\\n}\', \'0\', \'a:0:{}\', \'\', \'0\', \'\')',
      20 => 'INSERT INTO `[[++table_prefix]]site_snippets` (`id`, `source`, `property_preprocess`, `name`, `description`, `editor_type`, `category`, `cache_type`, `snippet`, `locked`, `properties`, `moduleguid`, `static`, `static_file`) VALUES (\'47\', \'0\', \'0\', \'Breadcrumbs\', \'\', \'0\', \'39\', \'0\', \'/**\\n * BreadCrumbs\\n *\\n * Copyright 2009-2011 by Shaun McCormick <shaun+bc@modx.com>\\n *\\n * BreadCrumbs is free software; you can redistribute it and/or modify it\\n * under the terms of the GNU General Public License as published by the Free\\n * Software Foundation; either version 2 of the License, or (at your option) any\\n * later version.\\n *\\n * BreadCrumbs is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * BreadCrumbs; if not, write to the Free Software Foundation, Inc., 59 Temple Place,\\n * Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package breadcrumbs\\n */\\n/**\\n * @name BreadCrumbs\\n * @version 0.9f\\n * @created 2006-06-12\\n * @since 2009-05-11\\n * @author Jared <jaredc@honeydewdesign.com>\\n * @editor Bill Wilson\\n * @editor wendy@djamoer.net\\n * @editor grad\\n * @editor Shaun McCormick <shaun@collabpad.com>\\n * @editor Shawn Wilkerson <shawn@shawnwilkerson.com>\\n * @editor Wieger Sloot, Sterc.nl <wieger@sterc.nl>\\n * @tester Bob Ray\\n * @package breadcrumbs\\n *\\n * This snippet was designed to show the path through the various levels of site\\n * structure back to the root. It is NOT necessarily the path the user took to\\n * arrive at a given page.\\n *\\n * @see breadcrumbs.class.php for config settings\\n *\\n * Included classes\\n * .B_crumbBox Span that surrounds all crumb output\\n * .B_hideCrumb Span surrounding the \\"...\\" if there are more crumbs than will be shown\\n * .B_currentCrumb Span or A tag surrounding the current crumb\\n * .B_firstCrumb Span that always surrounds the first crumb, whether it is \\"home\\" or not\\n * .B_lastCrumb Span surrounding last crumb, whether it is the current page or not .\\n * .B_crumb Class given to each A tag surrounding the intermediate crumbs (not home, or\\n * hide)\\n * .B_homeCrumb Class given to the home crumb\\n */\\nrequire_once $modx->getOption(\\\'breadcrumbs.core_path\\\',null,$modx->getOption(\\\'core_path\\\').\\\'components/breadcrumbs/\\\').\\\'model/breadcrumbs/breadcrumbs.class.php\\\';\\n$bc = new BreadCrumbs($modx,$scriptProperties);\\nreturn $bc->run();\', \'0\', \'\', \'\', \'0\', \'\')',
      21 => 'INSERT INTO `[[++table_prefix]]site_snippets` (`id`, `source`, `property_preprocess`, `name`, `description`, `editor_type`, `category`, `cache_type`, `snippet`, `locked`, `properties`, `moduleguid`, `static`, `static_file`) VALUES (\'48\', \'10\', \'0\', \'robokassa.getButton\', \'Получаем кнопку для оплаты\', \'0\', \'40\', \'0\', \'$output = \\\'\\\';\\n$mrh_login = $modx->getOption(\\\'robokassa.mrh_login\\\');\\n$mrh_pass1 = $modx->getOption(\\\'robokassa.mrh_pass1\\\');\\n$inv_id = \\\'\\\';\\n\\nif(!$shp_user_id){\\n    $shp_user_id = $modx->user->id;\\n}\\n\\n$crc = md5(\\"{$mrh_login}:{$out_sum}:{$inv_id}:{$mrh_pass1}:shp_aid={$shp_aid}:shp_order={$shp_order}:shp_trff={$shp_trff}:shp_uid={$shp_user_id}\\");\\n\\n$output = $modx->getChunk($tpl, array(\\n    \\"shp_user_id\\" => $shp_user_id,\\n    \\"out_sum\\"     => $out_sum,\\n    \\"mrh_login\\"   => $mrh_login,\\n    \\"crc\\"         => $crc,\\n    \\"inv_id\\"      => $inv_id,\\n    \\"shp_trff\\"    => $shp_trff,\\n    \\"shp_order\\"   => $shp_order,\\n    \\"shp_aid\\"     => $shp_aid,\\n    \\"title\\"       => \\\'Оплатить\\\',\\n    \\"inv_desc\\"    => $desc\\n));\\nreturn $output;\', \'0\', \'a:6:{s:4:\\"desc\\";a:7:{s:4:\\"name\\";s:4:\\"desc\\";s:4:\\"desc\\";s:0:\\"\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:7:\\"out_sum\\";a:7:{s:4:\\"name\\";s:7:\\"out_sum\\";s:4:\\"desc\\";s:0:\\"\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:9:\\"shp_order\\";a:7:{s:4:\\"name\\";s:9:\\"shp_order\\";s:4:\\"desc\\";s:0:\\"\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:8:\\"shp_trff\\";a:7:{s:4:\\"name\\";s:8:\\"shp_trff\\";s:4:\\"desc\\";s:0:\\"\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:11:\\"shp_user_id\\";a:7:{s:4:\\"name\\";s:11:\\"shp_user_id\\";s:4:\\"desc\\";s:0:\\"\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:3:\\"tpl\\";a:7:{s:4:\\"name\\";s:3:\\"tpl\\";s:4:\\"desc\\";s:38:\\"Шаблон кнопки оплаты\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:19:\\"robokassa.buttonTpl\\";s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}}\', \'\', \'0\', \'\')',
      22 => 'INSERT INTO `[[++table_prefix]]site_snippets` (`id`, `source`, `property_preprocess`, `name`, `description`, `editor_type`, `category`, `cache_type`, `snippet`, `locked`, `properties`, `moduleguid`, `static`, `static_file`) VALUES (\'49\', \'10\', \'0\', \'robokassa.payResult\', \'Проверка результата оплаты\', \'0\', \'40\', \'0\', \'$scriptProperties = array_merge((array)$scriptProperties, (array)$_POST);\\n\\n$namespace = \\\'basket\\\';\\nif(\\n    !$response = $modx->runProcessor(\\n        \\\'web/payments/robokassa/create\\\',\\n        $scriptProperties, \\n        array(\\n            \\\'processors_path\\\' => $modx->getObject(\\\'modNamespace\\\', $namespace)->getCorePath().\\\'processors/\\\',\\n        )\\n    )\\n    OR $response->isError()\\n){\\n    return ($msg = $response->getMessage()) ? $msg :\\"Ошибка выполнения запроса\\";\\n}\\n \\nreturn $response->getMessage();\', \'0\', \'a:0:{}\', \'\', \'0\', \'\')',
      23 => 'INSERT INTO `[[++table_prefix]]site_snippets` (`id`, `source`, `property_preprocess`, `name`, `description`, `editor_type`, `category`, `cache_type`, `snippet`, `locked`, `properties`, `moduleguid`, `static`, `static_file`) VALUES (\'50\', \'0\', \'0\', \'pthumb\', \'Identical to phpthumbof. Better for future compatibility.\\nDocumentation: https://github.com/oo12/phpThumbOf\', \'0\', \'30\', \'0\', \'/**\\n * pThumb\\n * Copyright 2013-2014 Jason Grant\\n *\\n * Please see the GitHub page for documentation or to report bugs:\\n * https://github.com/oo12/phpThumbOf\\n *\\n * Forked from phpThumbOf 1.4.0\\n * Copyright 2009-2012 by Shaun McCormick <shaun@modx.com>\\n *\\n * pThumb is free software; you can redistribute it and/or modify it\\n * under the terms of the GNU General Public License as published by the Free\\n * Software Foundation; either version 2 of the License, or (at your option) any\\n * later version.\\n *\\n * pThumb is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * phpThumbOf; if not, write to the Free Software Foundation, Inc., 59 Temple\\n * Place, Suite 330, Boston, MA 02111-1307 USA\\n *\\n */\\n/**\\n *\\n * @var modX $modx\\n * @var array $scriptProperties\\n * @var string $input\\n * @var string|array $options\\n *\\n */\\n\\nif (empty($input)) {  // Exit quietly if no file name given\\n	return;\\n}\\n\\n$scriptProperties[\\\'debug\\\'] = isset($debug) ? $debug : false;\\n\\n\\nstatic $pt_settings = array();\\n\\nif (empty($pt_settings)) {\\n	if (!$modx->loadClass(\\\'phpThumbOf\\\', MODX_CORE_PATH . \\\'components/phpthumbof/model/\\\', true, true)) {\\n		$modx->log(modX::LOG_LEVEL_ERROR, \\\'[pThumb] Could not load phpThumbOf class.\\\');\\n		return $input;\\n	}\\n}\\n\\n$pThumb = new phpThumbOf($modx, $pt_settings, $scriptProperties);\\n\\n$result = $pThumb->createThumbnail($input, $options);\\n\\nif (!empty($toPlaceholder) || $result[\\\'outputDims\\\']) {\\n	if ($result[\\\'width\\\'] === \\\'\\\' && $result[\\\'file\\\'] && $dims = getimagesize($result[\\\'file\\\']) ) {\\n			$result[\\\'width\\\'] = $dims[0];\\n			$result[\\\'height\\\'] = $dims[1];\\n	}\\n	if (!empty($toPlaceholder)) {\\n		$modx->setPlaceholders(array(\\n			$toPlaceholder => $result[\\\'src\\\'],\\n			\\"$toPlaceholder.width\\" => $result[\\\'width\\\'],\\n			\\"$toPlaceholder.height\\" => $result[\\\'height\\\']\\n		));\\n		$output = \\\'\\\';\\n	}\\n	if ($result[\\\'outputDims\\\']) {\\n		$output = \\"src=\\\\\\"{$result[\\\'src\\\']}\\\\\\"\\" . ($result[\\\'width\\\'] ? \\" width=\\\\\\"{$result[\\\'width\\\']}\\\\\\" height=\\\\\\"{$result[\\\'height\\\']}\\\\\\"\\" : \\\'\\\');\\n	}\\n}\\nelse {\\n	$output = $result[\\\'src\\\'];\\n}\\n\\nif ($debug && $result[\\\'success\\\']) {  // if debugging is on and createThumbnail was successful, log the debug info\\n	$pThumb->debugmsg(isset($pThumb->phpThumb->debugmessages) ? \\\':: Processed ::\\\' : \\":: Loaded from cache: {$result[\\\'src\\\']}\\", true);\\n}\\n\\nreturn $output;\', \'0\', \'a:1:{s:5:\\"debug\\";a:7:{s:4:\\"name\\";s:5:\\"debug\\";s:4:\\"desc\\";s:22:\\"prop_pthumb.debug_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:18:\\"phpthumbof:default\\";s:4:\\"area\\";s:0:\\"\\";}}\', \'\', \'0\', \'\')',
      24 => 'INSERT INTO `[[++table_prefix]]site_snippets` (`id`, `source`, `property_preprocess`, `name`, `description`, `editor_type`, `category`, `cache_type`, `snippet`, `locked`, `properties`, `moduleguid`, `static`, `static_file`) VALUES (\'51\', \'0\', \'0\', \'edinayakassa.getButton\', \'Получаем кнопку для оплаты\', \'0\', \'44\', \'0\', \'//Секретный ключ интернет-магазина\\n$secret_key = $modx->getOption(\\\'edinayakassa.secret_key\\\');\\n  \\n\\n// Добавление полей формы в ассоциативный массив\\n//Если требуется задать только определенные способы оплаты, раскоментируйте данную строку и перечислите требуемые способы оплаты.\\n//$fields[\\"WMI_PTENABLED\\"]      = array(\\"ContactRUB\\", \\"UnistreamRUB\\", \\"SberbankRUB\\", \\"RussianPostRUB\\");\\n\\n$fields = array_merge(\\n    array (\\n        \\\'WMI_DESCRIPTION\\\' => \\"BASE64:\\".base64_encode($description),\\n        \\"order_id\\"        => $order_id,\\n        \\"uid\\"             => $modx->user->id,\\n    ),\\n    (array)$scriptProperties\\n);\\n\\n\\n$options = array();\\n$modx->getParser();\\n$maxIterations= intval($modx->getOption(\\\'parser_max_iterations\\\', $options, 10));\\n\\n\\n//Сортировка значений внутри полей\\nforeach($fields as $name => $val){\\n    if (is_array($val)){\\n        usort($val, \\"strcasecmp\\");\\n        $fields[$name] = $val;\\n    }\\n    else{\\n        // На случай наличия в значениях MODX-тегов, парсим их сразу, иначе нарушится цифровая подпись\\n        $modx->parser->processElementTags(\\\'\\\', $fields[$name], true, false, \\\'[[\\\', \\\']]\\\', array(), $maxIterations);\\n        $modx->parser->processElementTags(\\\'\\\', $fields[$name], true, true, \\\'[[\\\', \\\']]\\\', array(), $maxIterations); \\n    }\\n}\\n\\n\\n// Формирование сообщения, путем объединения значений формы, \\n// отсортированных по именам ключей в порядке возрастания.\\nuksort($fields, \\"strcasecmp\\");\\n$fieldValues = \\"\\";\\n\\n\\nforeach($fields as $value) \\n{\\n    if (is_array($value)){\\n        foreach($value as $v){\\n            $fieldValues .= $v;\\n        }\\n    }\\n    else{\\n        \\n        $fieldValues .= $value;\\n    }\\n}\\n \\n\\n// Формирование значения параметра WMI_SIGNATURE, путем \\n// вычисления отпечатка, сформированного выше сообщения, \\n// по алгоритму MD5 и представление его в Base64\\n\\n$signature = base64_encode(pack(\\"H*\\", md5($fieldValues . $secret_key)));\\n\\n//Добавление параметра WMI_SIGNATURE в словарь параметров формы\\n\\n$fields[\\"WMI_SIGNATURE\\"] = $signature;\\n\\n// Формирование HTML-кода платежной формы в Smarty-шаблоне\\n\\n$modx->smarty->assign(\\\'fields\\\', $fields); \\nreturn $modx->smarty->fetch(\\\'edinayakassa/button.tpl\\\');\', \'0\', \'a:6:{s:15:\\"WMI_CURRENCY_ID\\";a:7:{s:4:\\"name\\";s:15:\\"WMI_CURRENCY_ID\\";s:4:\\"desc\\";s:0:\\"\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:30:\\"[[++edinayakassa.currency_id]]\\";s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:12:\\"WMI_FAIL_URL\\";a:7:{s:4:\\"name\\";s:12:\\"WMI_FAIL_URL\\";s:4:\\"desc\\";s:0:\\"\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:30:\\"[[++edinayakassa.failure_url]]\\";s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:15:\\"WMI_MERCHANT_ID\\";a:7:{s:4:\\"name\\";s:15:\\"WMI_MERCHANT_ID\\";s:4:\\"desc\\";s:0:\\"\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:30:\\"[[++edinayakassa.merchant_id]]\\";s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:15:\\"WMI_SUCCESS_URL\\";a:7:{s:4:\\"name\\";s:15:\\"WMI_SUCCESS_URL\\";s:4:\\"desc\\";s:0:\\"\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:30:\\"[[++edinayakassa.success_url]]\\";s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:11:\\"description\\";a:7:{s:4:\\"name\\";s:11:\\"description\\";s:4:\\"desc\\";s:0:\\"\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:8:\\"order_id\\";a:7:{s:4:\\"name\\";s:8:\\"order_id\\";s:4:\\"desc\\";s:0:\\"\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}}\', \'\', \'0\', \'\')',
      25 => 'INSERT INTO `[[++table_prefix]]site_snippets` (`id`, `source`, `property_preprocess`, `name`, `description`, `editor_type`, `category`, `cache_type`, `snippet`, `locked`, `properties`, `moduleguid`, `static`, `static_file`) VALUES (\'52\', \'0\', \'0\', \'edinayakassa.payResult\', \'Проверка результата оплаты\', \'0\', \'44\', \'0\', \'$scriptProperties = array_merge((array)$scriptProperties, (array)$_POST);\\n\\n$namespace = \\\'edinayakassa\\\';\\nif(\\n    !$response = $modx->runProcessor(\\n        \\\'edinayakassa/web/payments/create\\\',\\n        $scriptProperties, \\n        array(\\n            \\\'processors_path\\\' => $modx->getObject(\\\'modNamespace\\\', $namespace)->getCorePath().\\\'processors/\\\',\\n        )\\n    )\\n    OR $response->isError()\\n){\\n    // return ($msg = $response->getMessage()) ? $msg :\\"Ошибка выполнения запроса\\";\\n    return \\\'WMI_RESULT=RETRY&WMI_DESCRIPTION=Error\\\';\\n}\\n \\n// return $response->getMessage();\\nreturn \\\'WMI_RESULT=OK&WMI_DESCRIPTION=Order successfully processed\\\';\', \'0\', NULL, \'\', \'0\', \'\')',
      26 => 'INSERT INTO `[[++table_prefix]]site_snippets` (`id`, `source`, `property_preprocess`, `name`, `description`, `editor_type`, `category`, `cache_type`, `snippet`, `locked`, `properties`, `moduleguid`, `static`, `static_file`) VALUES (\'54\', \'0\', \'0\', \'modcaptcha.check_captcha\', \'\', \'0\', \'45\', \'0\', \'$result = false;\\n\\nif(empty($scriptProperties[\\\'captcha_key\\\'])){\\n    $scriptProperties[\\\'captcha_key\\\'] = $modx->getOption(\\\'modcaptcha.session_id\\\', null, \\\'php_captcha\\\');\\n}\\n\\n$key = $scriptProperties[\\\'captcha_key\\\'];\\n\\nif(empty($scriptProperties[\\\'code\\\'])){\\n    $param = \\"_\\".strtoupper($method);\\n    \\n    if(isset($$param)){\\n        $p = $$param;\\n        \\n        $scriptProperties[\\\'code\\\'] = (!empty($p[$key]) ? $p[$key] : \\"\\");\\n    }\\n}\\n\\nif(!$path = $modx->getOption(\\\'modcaptcha.core_path\\\')){\\n    $path = $modx->getOption(\\\'core_path\\\', null, MODX_CORE_PATH). \\\'components/modcaptcha/\\\';\\n}\\n\\nif(!$response = $modx->runProcessor(\\\'modcaptcha/web/check\\\', $scriptProperties, array(\\n    \\\'processors_path\\\' => $path.\\\'processors/\\\',\\n))){\\n    $modx->log(xPDO::LOG_LEVEL_ERROR, \\"[modCaptcha - modcaptcha.check_captcha snippet] - Can not execute processor\\");\\n    return \\\'\\\';\\n}\\n\\nif($response->isError()){\\n    $result = $response->getMessage();\\n}\\nelse{\\n    $result = \\\'true\\\';\\n}\\n\\n$modx->error->reset();\\n\\nreturn $result;\', \'0\', \'a:3:{s:14:\\"case_sensitive\\";a:7:{s:4:\\"name\\";s:14:\\"case_sensitive\\";s:4:\\"desc\\";s:0:\\"\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";b:0;s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:4:\\"code\\";a:7:{s:4:\\"name\\";s:4:\\"code\\";s:4:\\"desc\\";s:0:\\"\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:6:\\"method\\";a:7:{s:4:\\"name\\";s:6:\\"method\\";s:4:\\"desc\\";s:16:\\"REQUEST|GET|POST\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:7:\\"REQUEST\\";s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}}\', \'\', \'0\', \'\')',
      27 => 'INSERT INTO `[[++table_prefix]]site_snippets` (`id`, `source`, `property_preprocess`, `name`, `description`, `editor_type`, `category`, `cache_type`, `snippet`, `locked`, `properties`, `moduleguid`, `static`, `static_file`) VALUES (\'58\', \'0\', \'0\', \'ShopModxUnitPay.payResult\', \'ShopModxUnitPay.payResult_desc\', \'0\', \'50\', \'0\', \'$scriptProperties = array_merge((array)$scriptProperties, (array)$_REQUEST);\\n\\n$namespace = \\\'shopmodxunitpay\\\';\\n$processor = \\"{$namespace}/web/payments/create\\";\\nif(\\n    !$response = $modx->runProcessor(\\n        $processor,\\n        $scriptProperties, \\n        array(\\n            \\\'processors_path\\\' => $modx->getObject(\\\'modNamespace\\\', $namespace)->getCorePath().\\\'processors/\\\',\\n        )\\n    )\\n){\\n    $modx->log(xPDO::LOG_LEVEL_ERROR, \\"[- snippet unitpay.payResult -] Error execute processor {$processor}\\");\\n    return \\"ERROR\\";\\n}\\n \\n# if($response->isError()){}\\n\\nreturn $response->getMessage();\', \'0\', \'a:0:{}\', \'\', \'0\', \'\')',
    ),
  ),
  'vehicle_package' => 'vapor',
  'vehicle_class' => 'vaporVehicle',
  'guid' => '5401c74f2668b710e44e81b305eb226f',
  'package' => '',
  'signature' => '5195e75c402ba1802fce38c9011a753c',
  'native_key' => '5401c74f2668b710e44e81b305eb226f',
);